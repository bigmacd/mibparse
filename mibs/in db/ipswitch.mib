--
-- Cascade Communications
--
-- TCP/IP MIB definitions.
--
-- ***************************************************************************

CASCADE-TCPIP-MIB DEFINITIONS ::= BEGIN

IMPORTS
	DisplayString
                FROM RFC1213-MIB
        IpAddress, Counter, Gauge, TimeTicks
                FROM RFC1155-SMI
	OBJECT-TYPE
		FROM RFC-1212
	ipswitch 
		FROM CASCADE-MIB;

cascarp		OBJECT IDENTIFIER ::= { ipswitch 1 }
cascip		OBJECT IDENTIFIER ::= { ipswitch 2 }
cascrawip	OBJECT IDENTIFIER ::= { ipswitch 3 }
cascipres	OBJECT IDENTIFIER ::= { ipswitch 4 }
cascicmp	OBJECT IDENTIFIER ::= { ipswitch 5 }
casctcp		OBJECT IDENTIFIER ::= { ipswitch 6 }
cascudp		OBJECT IDENTIFIER ::= { ipswitch 7 }
cascfilters	OBJECT IDENTIFIER ::= { ipswitch 8 }
cascrip		OBJECT IDENTIFIER ::= { ipswitch 9 }
cascipqos	OBJECT IDENTIFIER ::= { ipswitch 10 }
cascbgp		OBJECT IDENTIFIER ::= { ipswitch 11 }
cascpolicy	OBJECT IDENTIFIER ::= { ipswitch 12 }
cascstatic	OBJECT IDENTIFIER ::= { ipswitch 13 }
cascnhrp        OBJECT IDENTIFIER ::= { ipswitch 14 }
cascigmp	OBJECT IDENTIFIER ::= { ipswitch 15 }
cascqsm	        OBJECT IDENTIFIER ::= { ipswitch 16 }

icmpProto	OBJECT IDENTIFIER ::= { cascicmp 1 }
tcpProto	OBJECT IDENTIFIER ::= { casctcp 1 }
udpProto	OBJECT IDENTIFIER ::= { cascudp 1 }
ipProto		OBJECT IDENTIFIER ::= { cascip 1 }
arpProto	OBJECT IDENTIFIER ::= { cascarp 1 }
nhrpObjects     OBJECT IDENTIFIER ::= { cascnhrp 1}
     
--
-- Arp Subgroup
--

 arpProtoArpEngine  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
 	DESCRIPTION
		"Protocol Engine Enabled/Disabled
	 	 default:enabled"
  	::=  { arpProto 1 } 
     
 arpProtoInArpEngine  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Enabled/Disabled
		 default:enabled"
	::= {arpProto 2 } 

 arpProtoBHDtimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Arp Black Hole Detection timeout
	 	 default: 30 seconds"
	::= {arpProto 3 } 

 arpProtoBHDretries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Arp Black Hole Detection retries
 		 default: 6 "
	::= {arpProto 4 } 

 arpProtoDADtimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Arp Duplicate Address Detection timeout
		 default:  1 second " 
	::= {arpProto 5 } 

 arpProtoDADretries OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Arp Duplicate Address  Detection retries
 		 default:   3 times" 
	::= {arpProto 6 } 

 arpProtoEntrytimeouts 	 OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The default for Arp Entry Timeouts
		 default:   1200 secs" 
	::= {arpProto 7 } 

 arpProtoCacheNumberOfEntries OBJECT-TYPE     
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of Arp cache entries."
	::= { arpProto  8}


--
--
-- Arp Cache subgroup
--
--  	Some of the descriptors are parallel with 
--	those of the MIB II ipNetToMediaNetAddress  Table
--
--

 arpCacheTable OBJECT-TYPE
	SYNTAX SEQUENCE OF ArpCacheEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A table of Arp mappings."
	::= { cascarp 2 }

 arpCacheEntry OBJECT-TYPE
	SYNTAX ArpCacheEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"The information regarding a single IP address mapping"
	INDEX { arpIpAddress }
	::= { arpCacheTable 1 }

 ArpCacheEntry ::=
	SEQUENCE {
                arpIpAddress          IpAddress,
                arpHwAddress  		OCTET STRING,
                arpDlci         	INTEGER,
                arpVpi			INTEGER,
                arpVci			INTEGER,
                arpLinkType           	INTEGER,
		arpAdminStatus		INTEGER
	}

 arpIpAddress  OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry IP address"
        ::= { arpCacheEntry 1 }

 arpHwAddress OBJECT-TYPE
        SYNTAX OCTET STRING
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry MAC address"
        ::= { arpCacheEntry 2}

 arpDlci OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry Dlci"
        ::= { arpCacheEntry 3}

 arpVpi OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry Vpi"
        ::= { arpCacheEntry 4}

 arpVci OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry Vci"
        ::= { arpCacheEntry 5}

 arpLinkType OBJECT-TYPE
        SYNTAX INTEGER {
                ethernet (1),
                dlci (2),
                vpi-vci (3)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "arp Cache Entry Link Type"
        ::= { arpCacheEntry  6}

 arpAdminStatus OBJECT-TYPE
        SYNTAX INTEGER {
		complete (1),
                delete (2),
                incomplete(3)
        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Delete arp Cache Entry"
        ::= { arpCacheEntry  7}

--
--
-- IP Subgroup
--     
--

 ipProtoEngine  OBJECT-TYPE
	SYNTAX INTEGER  {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Enabled/Disabled  default:enabled"
	::= { ipProto 1 } 

 ipProtoMtu OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Default Mtu 	default:  1500"
	::= { ipProto 2} 

 ipProtoTtl OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Default Ttl - parallel to MIB II	default: 64"
	::= { ipProto 3 } 

 ipProtoReassTtl OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Default Reassembly Ttl - parallel to MIB II	default: 60"
	::= { ipProto 4 } 

 ipProtoUnicastForwarding  OBJECT-TYPE
	SYNTAX INTEGER {
		disabled (2),
		enable (1)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Unicast Forwarding  - parallel MIB II  default: enabled"
	::= { ipProto 5 } 

 ipProtoMulticastForwarding  OBJECT-TYPE
	SYNTAX INTEGER {
		disabled (2),
		enable (1)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Multicast Forwarding 	default:disabled"
	::= { ipProto 6 } 

 ipProtoBroadcastForwarding  OBJECT-TYPE
	SYNTAX INTEGER {
		disabled (2),
		enable (1)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Broadcast Forwarding 	default:disabled"
	::= { ipProto 7 } 


--
--
-- IP Options Table
--     
--

 ipProtoOptionsTable 	OBJECT-TYPE
	SYNTAX SEQUENCE OF IpProtoOptionsEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An array of values  default: all enabled"
	::= { cascip 2 }

 ipProtoOptionsEntry	OBJECT-TYPE
	SYNTAX IpProtoOptionsEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		" option enabled/disabled "
	INDEX { ipProtoOptions }
	::= { ipProtoOptionsTable 1 }

 IpProtoOptionsEntry ::=
	SEQUENCE {
		ipProtoOptions 	INTEGER
	}

 ipProtoOptions   OBJECT-TYPE
	SYNTAX INTEGER 
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Options Processing : default all options are processed 
		The following IP options can be specified:
		Record Packet Route :	value = 7
		Timestamp:		value = 130
		Loose Sourc eROute	value = 131
		Satnet ID		value = 132
		Strict Sourc eROute	value = 137

		disabled (65536 + IP Option Value in IP header),
		enable ( IP Options Value in IP header)
		"
	::= { ipProtoOptionsEntry 1 } 

--
--	IP lport Table
--
--

 ipLportTable	 OBJECT-TYPE
	SYNTAX	 SEQUENCE OF IpLportEntry
	ACCESS 	not-accessible
	STATUS 	mandatory
	DESCRIPTION
		"A table containing information about IP Interface"
	::= { cascip 4 }

 ipLportEntry 	OBJECT-TYPE
	SYNTAX 	IpLportEntry
	ACCESS 	not-accessible
	STATUS 	mandatory
	DESCRIPTION
		"The information regarding a single IP Interface "
	INDEX { ipLportIndex } 
	::= { ipLportTable 1 }

 IpLportEntry ::=
	SEQUENCE {
		ipLportIndex 			INTEGER,
		ipLportUcastForwarding  	INTEGER,
		ipLportMcastForwarding  	INTEGER, 
		ipLportBcastForwarding  	INTEGER, 
                ipLportAdminStatus           	INTEGER,
		ipLportQosStatus		INTEGER,
		ipLportUnNumberedIf		INTEGER,
		ipLportInOctets			Counter,
		ipLportInUcastPkts		Counter,
		ipLportInNUcastPkts		Counter,
		ipLportInDiscards		Counter,
		ipLportInFragmented		Counter,
		ipLportInErrors			Counter,
		ipLportInDestUnreach		Counter,
		ipLportInTtlExceeded		Counter,
		ipLportInParamErr		Counter,
		ipLportInProtoUnknown		Counter,
		ipLportOutOctets		Counter,
		ipLportOutUcastPkts		Counter,
		ipLportOutNUcastPkts		Counter,
		ipLportOutDiscards		Counter,
		ipLportOutErrors		Counter,
		ipLportOutQlen			Gauge,
		ipLportFilterInAccept		Counter,
		ipLportFilterInReject		Counter,
		ipLportFilterInTrace		Counter,
		ipLportFilterOutAccept		Counter,
		ipLportFilterOutReject		Counter,
		ipLportFilterOutTrace		Counter,
		ipLportMcastProto		INTEGER
	}

 ipLportIndex	OBJECT-TYPE
	SYNTAX 	INTEGER
	ACCESS 	read-write
	STATUS 	mandatory
	DESCRIPTION
		"IP Lport Index"
	::= { ipLportEntry 1 }


 ipLportUcastForwarding  	OBJECT-TYPE
	SYNTAX		INTEGER {
		disabled (2),
		enable (1)
	}
	ACCESS 		read-write
	STATUS 		mandatory
	DESCRIPTION
		"IP lport Unicast Forwarding "
	::= { ipLportEntry 2 }


 ipLportMcastForwarding  	OBJECT-TYPE
	SYNTAX 		INTEGER {
		disabled (2),
		enable (1)
	}
	ACCESS 		read-write
	STATUS		mandatory
	DESCRIPTION
		"IP Multicast Forwarding "
	::= { ipLportEntry 3 }

 ipLportBcastForwarding 	OBJECT-TYPE
	SYNTAX		 INTEGER{
		disabled (2),
		enable (1)
	}
	ACCESS 		read-write
	STATUS 		mandatory
	DESCRIPTION
		"IP Broadcast Forwarding "
	::= { ipLportEntry 4}


 ipLportAdminStatus OBJECT-TYPE
        SYNTAX                  INTEGER {
                delete (3),
                disable (2),
                enable (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "Enable/Disable/delete lport"
        ::= { ipLportEntry 5}

 ipLportQosStatus OBJECT-TYPE
        SYNTAX                  INTEGER {
                disable (2),
                enable (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "Enable/Disable QoS per lport"
        ::= { ipLportEntry 6}

 ipLportUnNumberedIf OBJECT-TYPE
        SYNTAX                  INTEGER {
                disable (2),
                enable (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "Enable/Disable UnNumbered interface"
        ::= { ipLportEntry 7}


 ipLportInOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets received on the
                      iplport, including framing characters."
              ::= { ipLportEntry 8 }

 ipLportInUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of unicast packets
                      delivered to a higher-layer protocol."
              ::= { ipLportEntry 9 }

 ipLportInNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of non-unicast (i.e., subnetwork-
                      broadcast or subnetwork-multicast) packets
                      delivered to a higher-layer protocol."
              ::= { ipLportEntry 10 }

 ipLportInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being deliverable to a
                      higher-layer protocol.  One possible reason for
                      discarding such a packet could be to free up
                      buffer space."
              ::= { ipLportEntry 11 }

 ipLportInFragmented OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which were 
                      fragmented."
              ::= { ipLportEntry 12 }

 ipLportInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets that contained
                      errors preventing them from being deliverable to a
                      higher-layer protocol."
              ::= { ipLportEntry 13 }

 ipLportInDestUnreach OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets whose destination
                      was unreachable."
              ::= { ipLportEntry 14 }

 ipLportInTtlExceeded OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets whose time to live
                      had exceeded the specified value."
              ::= { ipLportEntry 15 }

 ipLportInParamErr OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which had faulty
		      parameters such as incorrect checksum etc."
              ::= { ipLportEntry 16 }

 ipLportInProtoUnknown OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of packets received via the interface
                      which were discarded because of an unknown or
                      unsupported protocol."
              ::= { ipLportEntry 17 }

 ipLportOutOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets transmitted out of the
                      interface, including framing characters."
              ::= { ipLportEntry 18 }

 ipLportOutUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a
                      subnetwork-unicast address, including those that
                      were discarded or not sent."
              ::= { ipLportEntry 19 }

 ipLportOutNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a non-
                      unicast (i.e., a subnetwork-broadcast or
                      subnetwork-multicast) address, including those
                      that were discarded or not sent."
              ::= { ipLportEntry 20 }

 ipLportOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being transmitted.  One
                      possible reason for discarding such a packet could
                      be to free up buffer space."
              ::= { ipLportEntry 21 }

 ipLportOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets that could not be
                      transmitted because of errors."
              ::= { ipLportEntry 22 }

 ipLportOutQlen OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The length of the output packet queue (in
                      packets)."
              ::= { ipLportEntry 23 }

 ipLportFilterInAccept OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of inbound packets accepted by an IP filter."
	::= { ipLportEntry 24 }

 ipLportFilterInReject OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of inbound packets rejected by an IP filter."
	::= { ipLportEntry 25 }

 ipLportFilterInTrace OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of inbound packets traced by an IP filter."
	::= { ipLportEntry 26 }

 ipLportFilterOutAccept OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of outbound packets accepted by an IP filter."
	::= { ipLportEntry 27 }

 ipLportFilterOutReject OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of outbound packets rejected by an IP filter."
	::= { ipLportEntry 28 }

 ipLportFilterOutTrace OBJECT-TYPE
	SYNTAX  Counter
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Total number of outbound packets traced by an IP filter."
	::= { ipLportEntry 29 }

 ipLportMcastProto OBJECT-TYPE
        SYNTAX  INTEGER {
                dvmrp (3),
                mospf (2),
                none (1)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "For LAN ports, defines which multicast protocol is running"
        ::= { ipLportEntry 30 }

--
--
--  IP If Definitions
--
--

 ipIfTable OBJECT-TYPE
	SYNTAX SEQUENCE OF IpIfEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A table containing information about IP interfaces"
	::= { cascip 6 }

 ipIfEntry OBJECT-TYPE
	SYNTAX IpIfEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"The information regarding a single IP interface"
	INDEX { ipIfIpLportIndex, ipIfIpAddress } 
	::= { ipIfTable 1 }

 IpIfEntry ::=
	SEQUENCE {
		ipIfIpLportIndex		INTEGER,
		ipIfIpAddress 			IpAddress,
		ipIfIpMask 			IpAddress,
		ipIfUnicastMtu 			INTEGER,
		ipIfMulticastAddress 		IpAddress,
		ipIfMulticastMtu 		INTEGER,
		ipIfBroadcastAddress  		IpAddress,
		ipIfBroadcastMtu 		INTEGER,
		ipIfArpStatus  			INTEGER,
		ipIfInArpStatus  		INTEGER,
                ipIfAdminStatus              	INTEGER,
		ipIfMcastForwarding		INTEGER,
		ipIfMcastProto			INTEGER,
		ipIfMospfPrimaryIf		INTEGER 
	}

 ipIfIpLportIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Lport Index"
	::= { ipIfEntry 1 }

 ipIfIpAddress  OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Interface IP Unicast Address"
	::= { ipIfEntry 2 }

 ipIfIpMask  OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Interface IP Unicast Address CIDR Mask.
		 It can be set only once i.e. once set, you can not change
		 it.  If you want an interface with same IP address but
		 different mask, you should delete the interface and add
		 a new one."
	::= { ipIfEntry 3 }

 ipIfUnicastMtu OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Unicast Mtu "
	::= { ipIfEntry 4 }

 ipIfMulticastAddress  OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Interface IP Multicast Address"
	::= { ipIfEntry 5 }

 ipIfMulticastMtu OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Interface Multicast  Mtu "
	::= { ipIfEntry 6}

 ipIfBroadcastAddress  OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Interface IP Broadcast Address"
	::= { ipIfEntry 7}

 ipIfBroadcastMtu OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"IP Interface Multicast  Mtu "
	::= { ipIfEntry 8}

 ipIfArpStatus  OBJECT-TYPE
	SYNTAX  		INTEGER {
		disable (2),
		enable (1)
	}
	ACCESS 		read-write
	STATUS 		mandatory
	DESCRIPTION
		"Enable/Disable Arp protocol per Interface "
	::= { ipIfEntry 9} 

 ipIfInArpStatus  OBJECT-TYPE
	SYNTAX  		INTEGER {
		disable (2),
		enable (1)
	}
	ACCESS 		read-write
	STATUS 		mandatory
	DESCRIPTION
		"Enable/Disable  Inverse Arp protocol per Interface"
	::= { ipIfEntry 10} 

 ipIfAdminStatus OBJECT-TYPE
        SYNTAX INTEGER {
                enable (1), 
                delete (2),
                disable (3)

        }
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "IP Interface parameters take effect when a set is sent to it"
        ::= { ipIfEntry 11 }

 ipIfMcastForwarding         OBJECT-TYPE
        SYNTAX          INTEGER {
                disabled (3),
                multicast (2),
                unicast (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "Defines how the IP Multicast datagrams should be
		 forwarded i.e. as data-link unicast, data-link 
		 multicast or not forwarded at all"
        ::= { ipIfEntry 12 }

 ipIfMcastProto		OBJECT-TYPE
        SYNTAX          INTEGER {
                mospf (2),
                none (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "Defines which multicast protocol is running on this
		 ip interface"
        ::= { ipIfEntry 13 }


 ipIfMospfPrimaryIf	OBJECT-TYPE
        SYNTAX          INTEGER {
                disable (2),
                enable (1)
        }
        ACCESS          read-write
        STATUS          mandatory
        DESCRIPTION
                "There should be one primary MOSPF interface on a LAN 
		 port. Indicates whether it is the primary interface"
        ::= { ipIfEntry 14 }

--
--
-- ICMP subgroup
--     
--

 icmpProtoEngine  OBJECT-TYPE
	SYNTAX  INTEGER  {
		enable (2),
		disable (1)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Message Generation Enabled/Disabled"
	::= { icmpProto 1 } 

 icmpProtoErrRate  OBJECT-TYPE
	SYNTAX INTEGER 
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Error Generation Rate" 
	::= { icmpProto 2 } 


--
--
-- ICMP messages table
--     
--

 icmpProtoMessageTable  OBJECT-TYPE
	SYNTAX SEQUENCE OF IcmpProtoMessageEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An array of values "
	::= { cascicmp 2 }

 icmpProtoMessageEntry OBJECT-TYPE
	SYNTAX IcmpProtoMessageEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"The information regarding a single ICMP message"
	INDEX { icmpProtoMessageGenValue }
	::= { icmpProtoMessageTable 1 }

 IcmpProtoMessageEntry ::=
	SEQUENCE {
		icmpProtoMessageGenValue 	INTEGER,
		icmpProtoMessageStatus	INTEGER
	}

 icmpProtoMessageGenValue OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Message Generation Enabled/Disabled
		enable (ICMP type + 256 * ICMP code),
		disable (65535 + ICMP type + 256 * ICMP code)

		ICMP messages  types				codes
		-------------  -----                            -----

		reply		0				
		unreachable	3			net		0
							host 		1
							protocol 	2
							port		3
							needfrag	4
							srcfail		5
							net_unknown	6
							host_unknown	7
							isolated	8
							net_prohib	9
							host_prohib	10
							tosnet		11
							toshost		12
		sourcequench	4
		redirect	5			net		0
							host		1
							tosnet		2
							toshost		3
		echo		8
		timxceed	11			intrans		0
							reass		1
		paramprob	12			optabsent	1
		tstamp		13
		tstampreply	14
		ireq		15
		ireqreply	16
		maskreq		17
		maskreply	18 "  	
	::= { icmpProtoMessageEntry 1 } 

 icmpProtoMessageStatus OBJECT-TYPE
        SYNTAX INTEGER {
		disable (2),
		enable (1)
	}
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "icmp message enabled/disabled"
        ::= { icmpProtoMessageEntry 2 } 



--
-- RAW IP
--

 rawIpProtoEngine  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Enabled/Disabled"
	::= { cascrawip 1 } 

 rawIpProtoSockets  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Number of Sockets"
	::= { cascrawip 2 }

 rawIpProtoSocketRCVBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket RCV Buffer"
	::= { cascrawip 3 }

 rawIpProtoSocketSNDBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket SND Buffer"
	::= { cascrawip 4}


--
-- TCPIP
--

 tcpProtoEngine  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Enabled/Disabled"
	::= { tcpProto  1} 

 tcpProtoSockets  OBJECT-TYPE
	SYNTAX INTEGER 
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Number of Sockets"
	::= { tcpProto  2}

 tcpProtoSocketRCVBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket RCV Buffer"
	::= { tcpProto  3 }

 tcpProtoSocketSNDBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket SND Buffer"
	::= { tcpProto  4 }

 tcpProtoImmediateACK   OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Immediate ACK Generation Enabled/Disabled" 
	::= { tcpProto  5 } 

 tcpProtoConnectTimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Connect Timeout"
	::= { tcpProto  6 } 

 tcpProtoCloseTimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Close Timeout"
	::= { tcpProto  7 }

 tcpProtoPersistTimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Persist Timeout"
	::= { tcpProto  8 } 

 tcpProtoKeepAliveTimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Keep Alive Timeout"
	::= { tcpProto  9 } 

 tcpProtoKeepAliveProbes  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Keep Alive Probes"
	::= { tcpProto  10 } 

 tcpProtoLingerTimeout  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Linger Timeout "
	::= { tcpProto  11 } 

 tcpProtoMSS  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP MSS; if zero then MSS is calculated automatically,  
		 if non-zero, use the value as MSS"
	::= { tcpProto  12 } 

 tcpProtoPathMtu   OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Use pf Path Mtu Enabled/Disabled" 
	::= { tcpProto 13 }  

 tcpProtoCompressHeader OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"TCP Header Compression Enabled/Disabled" 
	::= { tcpProto 14 }  

--
-- UDP Subgroup
--

 udpProtoEngine  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Enabled/Disabled"
	::= { udpProto 1 } 

 udpProtoSockets  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Number of Sockets"
	::= { udpProto 2 }


 udpProtoSocketRCVBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket RCV Buffer"
	::= { udpProto 3 }

 udpProtoSocketSNDBuffer  OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Socket SND Buffer"
	::= { udpProto 4 }

 udpProtoSndChecksum  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"UDP Protocol Transmit Checksum Calculation "
	::= { udpProto 5 }

 udpProtoRcvChecksum  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Protocol Receive Checksum Calculation "
	::= { udpProto 6 }

 udpProtoMulticast  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Multicast Enable"
	::= { udpProto 7 }

 udpProtoBroadcast  OBJECT-TYPE
	SYNTAX INTEGER {
		enable (1),
		disable (2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Protocol Engine Broadcast Enable"
	::= { udpProto 8 }

--
--
-- Resource Control
--
--

 ipResMinMbuf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Minimum Number of Control Buffers "
	::= { cascipres 1 } 

 ipResMinDbuf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Minimum Number of Data Buffers "
	::= { cascipres  2 } 

 ipResMaxMbuf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Maximum  Number of Control Buffers "
	::= { cascipres  3 }

 ipResMaxDbuf OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Maximum Number of Data Buffers "
	::= { cascipres  4 } 

 ipResArp OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Maximum Number of Arp entries "
	::= { cascipres  5 } 

 ipResIP OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Maximum Number of IP addresses "
	::= { cascipres  6 } 






--
--
-- RIP Subgroup
--     
--

ripTable  OBJECT-TYPE
	SYNTAX  SEQUENCE OF RipEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"A table of RIP configuration."
	::= { cascrip 1 }

ripEntry  OBJECT-TYPE
	SYNTAX  RipEntry
	ACCESS  not-accessible
	STATUS  mandatory
	DESCRIPTION
		"The RIP entry contains objects describing the RIP
		configuration on this IP interface."
	INDEX	{ ripAddress }
	::= { ripTable 1 }

RipEntry  ::=
        SEQUENCE {
		ripAddress
                	IpAddress,
		ripAdminStatus
			INTEGER,
		ripSplitHorizon
			INTEGER,
		ripIfIndex
			INTEGER,
		ripSendHostRoutes
			INTEGER
                  }

ripAddress  OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-only
	STATUS  mandatory
	DESCRIPTION
		"The IP Address of this system on the indicated
		subnet.  For unnumbered interfaces, the value 0.0.0.N,
		where the least significant 24 bits (N) is the ifIndex
		for the IP Interface in network byte order."
	::= { ripEntry 1 }

ripAdminStatus  OBJECT-TYPE
	SYNTAX  INTEGER {
		disabled (1),
		enabled (2)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The admin status of the RIP. If disabled then no 
		RIP update will be sent to (received from) this 
		IP interface."
	DEFVAL { enabled }
	::= { ripEntry 2 }

ripSplitHorizon  OBJECT-TYPE
	SYNTAX  INTEGER {
		disabled (1),
		simple (2),
		poisonousReverse (3)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The split horizon algorithm used by RIP on this 
		IP interface. Default as simple split horizon for
		Ethernet interface; default as disable split horizon
		for Frame Relay interface."
	DEFVAL { simple }
	::= { ripEntry 3 }

ripIfIndex  OBJECT-TYPE
	SYNTAX  INTEGER 
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The lport which this IP interface is configured on."
	::= { ripEntry 4 }

ripSendHostRoutes  OBJECT-TYPE
	SYNTAX  INTEGER {
		disabled (1),
		enabled (2)
	}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The option for management port to send swith network
		routes or host routes."
	::= { ripEntry 5 }

--
-- IP QoS Flow Profile Table
--

ipQoSProfileTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF IpQoSProfileEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of IP QoS Flow profiles."
	::= { cascipqos 1 }

ipQoSProfileEntry OBJECT-TYPE
	SYNTAX	IpQoSProfileEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP QoS Flow profile contains information used to
		 classify and associate IP flows with QoS VCs."
	INDEX	{ ipQoSProfileIndex }
	::= { ipQoSProfileTable 1 }

IpQoSProfileEntry ::=
	SEQUENCE {
		ipQoSProfileIndex
			INTEGER,
		ipQoSProfileAdminStatus
			INTEGER,
		ipQoSProfileSrcIPAdr
			IpAddress,
		ipQoSProfileSrcIPAdrCidr
			IpAddress,
		ipQoSProfileDstIPAdr
                        IpAddress,
                ipQoSProfileDstIPAdrCidr
                        IpAddress,
		ipQoSProfileVCType
			INTEGER,
		ipQoSProfileVCID
			INTEGER,
		ipQoSProfileName
			DisplayString	
		}

ipQoSProfileIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The ID which maps to a QoS Flow Profile name."
	::= { ipQoSProfileEntry 1 }

ipQoSProfileAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2),
		deleted (3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry."
	::= { ipQoSProfileEntry 2 }

ipQoSProfileSrcIPAdr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Source IP address."
	::= { ipQoSProfileEntry 3 }

ipQoSProfileSrcIPAdrCidr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Source IP Address CIDR mask."
	::= { ipQoSProfileEntry 4 }

ipQoSProfileDstIPAdr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Destination IP address."
	::= { ipQoSProfileEntry 5 }

ipQoSProfileDstIPAdrCidr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Destination IP Address CIDR mask."
	::= { ipQoSProfileEntry 6 }

ipQoSProfileVCType OBJECT-TYPE
	SYNTAX	INTEGER {
		fr-pvc (1),
		atm-pvc (2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Circuit type."
	::= { ipQoSProfileEntry 7 }

ipQoSProfileVCID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"ID which maps to either PVC circuit name
		 or SVC Descriptor name."
	::= { ipQoSProfileEntry 8 }

ipQoSProfileName OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Unique name associated with this Flow Profile."
        ::= { ipQoSProfileEntry 9 }

--
--  IP QoS Lport/Flow Profile Association table
--

ipQoSLPortTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF IpQoSLPortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of IP QoS lport/Flow profile associations."
	::= { cascipqos 2 }

ipQoSLPortEntry OBJECT-TYPE
	SYNTAX	IpQoSLPortEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP QoS Lport table entry  contains information used to
		 associate IP flows with QoS VCs."
	INDEX	{ ipQoSLPortIFIndex }
	::= { ipQoSLPortTable 1 }

IpQoSLPortEntry ::=
	SEQUENCE {
		ipQoSLPortIFIndex
			INTEGER,
		ipQoSLPortAdminStatus
			INTEGER,
		ipQoSLPortProfileIDs
			OCTET STRING
		}

ipQoSLPortIFIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The primary index of this entry within
		 the table which is the port's IFNUM."
	::= { ipQoSLPortEntry 1 }

ipQoSLPortAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2),
		deleted (3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry."
	::= { ipQoSLPortEntry 2 }

ipQoSLPortProfileIDs OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"IDs which maps to QoS Flow profile names (2 bytes per ID)."
	::= { ipQoSLPortEntry 3 }

--
-- IP QoS Lport/Flow Profile Packet Counter Table
--

ipQoSPktCntTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF IpQoSPktCntEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A list of IP QoS packet counters, one for each 
		 Lport/Flow Profile association."
        ::= { cascipqos 3 }

ipQoSPktCntEntry OBJECT-TYPE
        SYNTAX  IpQoSPktCntEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "An IP QoS packet counter table entry contains a count
		 of the # of packets forwarded over the VC associated with
                 the Flow Profile and Lport defined in this table entry." 
        INDEX   { ipQoSPktCntLportId, ipQoSPktCntFlowProfId }
        ::= { ipQoSPktCntTable 1 }

IpQoSPktCntEntry ::=
        SEQUENCE {
                ipQoSPktCntLportId
                        INTEGER,
                ipQoSPktCntFlowProfId
                        INTEGER,
                ipQoSPktCntCounter
                        INTEGER
                }

ipQoSPktCntLportId OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The Logical port ID (interface number)."
        ::= { ipQoSPktCntEntry 1 }

ipQoSPktCntFlowProfId OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The Flow Profile ID."
        ::= { ipQoSPktCntEntry 2 }

ipQoSPktCntCounter OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The packet count for the Lport/Flow Profile association."
        ::= { ipQoSPktCntEntry 3 }


--
-- BGP group
--
--
-- BGP scaler objects
--
ccBgpProtoState OBJECT-TYPE
	SYNTAX	INTEGER	{
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The admin/oper state of the BGP entity."
	::= { cascbgp 1 }

ccBgpAlwaysCmpMed  OBJECT-TYPE
	SYNTAX	INTEGER	{
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Controls the comparison of MED for external peers."
	::= { cascbgp 2 }
	
ccBgpRouteRefStatus  OBJECT-TYPE
	SYNTAX	INTEGER	{
		route-reflector(1),
		not-route-reflector(2)
		}
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"Indicate if the bgp instance is also route reflector.
		 If one of the peers is defined as route reflector
		 client, then this object will return enabled."
	::= { cascbgp 3 }

ccBgpRouteRefClustID  OBJECT-TYPE
	SYNTAX	INTEGER	
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The cluster ID. If there is more than one
		Route Reflector in the cluster, then defining
		this object is mandatory. Otherwise, the
		Router ID will be used as the cluster ID." 
	::= { cascbgp 4 }

ccBgpDefaultLocalPref OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The default local preference used to send 
		 to internal neighbors."
	::= { cascbgp 5 }

ccBgpClientToClientReflection OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"If this BGP node is a route reflector, this variable
		 controls the route reflection of route updates
		 received from a client to another client." 
	::= { cascbgp 6 }

--
-- BGP peer table
--

ccBgpPeerTable  OBJECT-TYPE
	SYNTAX	SEQUENCE OF CcBgpPeerEntry
	ACCESS 	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Table of BGP peer entries."
	::= { cascbgp 8 }
	
ccBgpPeerEntry	OBJECT-TYPE
	SYNTAX	CcBgpPeerEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Entry containing information about a BGP peer."
	INDEX { ccBgpPeerRemoteAddr }
	::= { ccBgpPeerTable 1 }

CcBgpPeerEntry ::=
	 SEQUENCE {
		ccBgpPeerRemoteAddr
			IpAddress,
		ccBgpPeerRemoteAs
			INTEGER,
		ccBgpPeerName
			DisplayString,
		ccBgpPeerConnType
			INTEGER,
		ccBgpPeerWeight
			INTEGER,
		ccBgpPeerRouteRefClient
			INTEGER,
		ccBgpPeerSendCommunity
			INTEGER,
		ccBgpPeerNextHopSelf
			INTEGER,
		ccBgpPeerRowStatus
			INTEGER,
		ccBgpPeerUpdateSource
			IpAddress,
                ccBgpPeerPeerGroupId
                        INTEGER,
                ccBgpPeerConfederationMember
                        INTEGER
		}

ccBgpPeerRemoteAddr  OBJECT-TYPE
	SYNTAX  IpAddress
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The ip address of the remote peer."
	::= { ccBgpPeerEntry 1 }

ccBgpPeerRemoteAs  OBJECT-TYPE
	SYNTAX  INTEGER
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The remote autonomous system number of this peer.
		 Valid values are (0..65535). Zero implies AS numner
		 will be automatically learned from peer."
	::= { ccBgpPeerEntry 2 }

ccBgpPeerName  OBJECT-TYPE
	SYNTAX  DisplayString
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The peer name."
	::= { ccBgpPeerEntry 3 }

ccBgpPeerConnType  OBJECT-TYPE
	SYNTAX	INTEGER	{
		direct(1),
		ext-multi-hop(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The type of the external peer. External multi-hops peers 
		 are not reachable directly."
	::= { ccBgpPeerEntry 4 }

ccBgpPeerWeight  OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The weight (metric) to be applied to every route
		 received from this peer."
	::= { ccBgpPeerEntry 5 }

ccBgpPeerRouteRefClient  OBJECT-TYPE
	SYNTAX	INTEGER	{
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This object controls if this peer is a route
		 reflector client. This is only true of the
		 BGP entity is defined as a route reflector.  NOTE:
		 this field is writable only if the peer node is a
		 member of the same AS as the local BGP node."
	::= { ccBgpPeerEntry 6 }
	
ccBgpPeerSendCommunity  OBJECT-TYPE
	SYNTAX	INTEGER	{
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This object controls sending the community 
		attribute in all updates sent to this peer."
	::= { ccBgpPeerEntry 7 }

ccBgpPeerNextHopSelf  OBJECT-TYPE
	SYNTAX	INTEGER	{
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This object controls whether routes advertised
		 to this peer will use the switch itself as
		 next hop."
	::= { ccBgpPeerEntry 8 }

ccBgpPeerRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
			create(1),
			delete(2),
			valid(3)
			}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The status of this entry. Columns of this row may
		 be modified only if the status is create(1) or valid(3).
		 After creation, the valid(1) status should be asserted."
	::= { ccBgpPeerEntry 9 }

ccBgpPeerUpdateSource  OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The source IP address to be used when making a TCP
		connection to the peer."
	::= { ccBgpPeerEntry 10 }

ccBgpPeerPeerGroupId  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "BGP peer group ID that this peer is a member of.
                The default value is 0 (member of no peer group)."
        ::= { ccBgpPeerEntry 11 }
 
ccBgpPeerConfederationMember  OBJECT-TYPE
        SYNTAX  INTEGER {
                enable(1),
                disable(2)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "This object controls if this peer is a member
                of the BGP confederation.
                The default value is disable(2)."
        ::= { ccBgpPeerEntry 12 }

--
--
--
ccBgpAsTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF CcBgpAsEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Table of AS entries."
		::= { cascbgp 9 }

ccBgpAsEntry OBJECT-TYPE
		SYNTAX	CcBgpAsEntry
		ACCESS	not-accessible
		STATUS	mandatory
		DESCRIPTION
			"Entry containing information about an AS."
		INDEX { ccBgpAsNumber }
		::= { ccBgpAsTable 1 }

CcBgpAsEntry ::= SEQUENCE {
			ccBgpAsNumber
				INTEGER,
			ccBgpAsWeight
				INTEGER,
			ccBgpAsRowStatus
				INTEGER
			}
ccBgpAsNumber OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-only
		STATUS	mandatory
		DESCRIPTION
			"A unique number associated with the AS entry.
			Valid numbers are within the range 1 - 65535."
		::= { ccBgpAsEntry 1 }
	
ccBgpAsWeight OBJECT-TYPE
		SYNTAX	INTEGER
		ACCESS	read-write
		STATUS	mandatory
		DESCRIPTION
			"An AS weight is assigned to an AS as a cost
			 metric. Valid values are within the range
			 0 - 65535. The default value is 1."
		::= { ccBgpAsEntry 2 }

ccBgpAsRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
			create(1),
			delete(2)
			}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The status of this entry. Columns of this row may
		 be modified only if the status is create(1)."
	::= { ccBgpAsEntry 3 }

--
-- Network Aggregation Table
--
ccBgpAggregTable  OBJECT-TYPE
	SYNTAX	SEQUENCE OF CcBgpAggregEntry
	ACCESS 	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Table of aggregate networks entries."
	::= { cascbgp 10 }
	
ccBgpAggregEntry  OBJECT-TYPE
	SYNTAX	CcBgpAggregEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Entry containing information about anaggregate network."
	INDEX { ccBgpAggregNetwork, ccBgpAggregMask }
	::= { ccBgpAggregTable 1 }

CcBgpAggregEntry ::= SEQUENCE {
		ccBgpAggregNetwork
			IpAddress,
		ccBgpAggregMask
			IpAddress,
		ccBgpAggregAdverContributors
			INTEGER,
		ccBgpAggregTag
			INTEGER,
		ccBgpAggregRowStatus
			INTEGER
		}

ccBgpAggregNetwork  OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The aggregate network IP address."
	::= { ccBgpAggregEntry 1 }
	
ccBgpAggregMask	OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The aggregate network mask."
	::= { ccBgpAggregEntry 2 }
	
ccBgpAggregAdverContributors  OBJECT-TYPE
	SYNTAX	INTEGER {
		enable(1),
		disable(2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Controls the advertisement or hiding the
		 components of the aggregate networks, which
		 are all networks that are more specifics that
		 the aggregate one."
	::= { ccBgpAggregEntry 3 }

ccBgpAggregTag	OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The route tag assigned to the aggregate
		 network."
	::= { ccBgpAggregEntry 4 }

ccBgpAggregRowStatus OBJECT-TYPE
	SYNTAX INTEGER {
			create(1),
			delete(2),
			valid(3)
			}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The status of this entry. Columns of this row may
		 be modified only if the status is create(1) or valid(3).
		 After creation, the valid(1) status should be asserted."
	::= { ccBgpAggregEntry 5 }

ccBgpConfederationID OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "BGP AS confederation identifier.
                Range 0 to 65535. The default value is 0."
        ::= { cascbgp 19 }

--
-- Cascade Route Policy
--
--
-- Table of Net filter entries
--
ccNetFilterTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF CcNetFilterEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Table of network based access entries (filters)."
        ::= { cascpolicy 1 }

ccNetFilterEntry  OBJECT-TYPE
        SYNTAX  CcNetFilterEntry
        ACCESS  not-accessible  
        STATUS  mandatory
        DESCRIPTION
                "Entry containing information about network filter."
        INDEX { ccNetFilterIndex }
        ::= { ccNetFilterTable 1 }

CcNetFilterEntry ::=
        SEQUENCE {
                ccNetFilterIndex
                        INTEGER,
                ccNetFilterNetwork
                        IpAddress,
                ccNetFilterLength
                        INTEGER,
                ccNetFilterCoverage
                        INTEGER,
                ccNetFilterRowState
                        INTEGER
                }

ccNetFilterIndex OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Index of the net filter generated by NMS.
		 This value can not be modified."
        ::= { ccNetFilterEntry 1 }

ccNetFilterNetwork OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The network ip address of the filter entry.
		 Once the record is committed, this field
		 can not be modified."
        ::= { ccNetFilterEntry 2 }
        
ccNetFilterLength OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The prefix length of the filter entry.
		 Once the record is committed, this field
		 can not be modified."
        ::= { ccNetFilterEntry 3 }

ccNetFilterCoverage     OBJECT-TYPE
        SYNTAX  INTEGER {
                exact(1),
                inclusive(2)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Controls if the result filter (network) is 
                 used exclusively or inclusively (all subnets
                 under it). Exact or best search. The default
                 value is exact (1).

		 Once the record is committed, this field
		 can not be modified."
        ::= { ccNetFilterEntry 4 }

ccNetFilterRowState OBJECT-TYPE
        SYNTAX  INTEGER {
                create(1),
                delete(2),
		commit(3)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Creating/deleting/committing the row in the table.
		 SNMP agent must send row state 'commit', at the end,
		 for this record."
        ::= { ccNetFilterEntry 5 }

--
--  Network Filter list table
--
ccNetFilterListTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF CcNetFilterListEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Table of network access lists entries."
        ::= { cascpolicy 2 }

ccNetFilterListEntry OBJECT-TYPE
        SYNTAX  CcNetFilterListEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Entry containing information about network access list."
        INDEX { ccNetFilterListIndex }
        ::= { ccNetFilterListTable 1 }

CcNetFilterListEntry ::=
        SEQUENCE {
                  ccNetFilterListIndex
                        INTEGER,
                  ccNetFilterListName
                        DisplayString,
                  ccNetFilterListFilter
                        OCTET STRING,
                  ccNetFilterListFilterAdd
                        OCTET STRING,
                  ccNetFilterListFilterRem
                        OCTET STRING,
		  ccNetFilterListRowStatus
			INTEGER
                 }
        
ccNetFilterListIndex OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The network access list number."
        ::= { ccNetFilterListEntry 1 }

ccNetFilterListName OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The network access list name."
        ::= { ccNetFilterListEntry 2 }

ccNetFilterListFilter OBJECT-TYPE
	SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Network filters associated with this list
		 in the octect string. The format of the string field:
                 | number of elements (max 300, ord16) | element 1 (ord16) |
                 | element 2 ..."
        ::= { ccNetFilterListEntry 3 }

ccNetFilterListFilterAdd OBJECT-TYPE
	SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Network filters associated with this list
		 in the octect string. The format of the string field:
                 | number of elements (max 300, ord16) | element 1 (ord16) |
                 | element 2 ..."
        ::= { ccNetFilterListEntry 4 }

ccNetFilterListFilterRem OBJECT-TYPE
	SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Network filters associated with this list
		 in the octect string. The format of the string field:
                 | number of elements (max 300, ord16) | element 1 (ord16) |
                 | element 2 ..."
        ::= { ccNetFilterListEntry 5 }

ccNetFilterListRowStatus OBJECT-TYPE
	SYNTAX  INTEGER {
            create(1),
            delete(2)}
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Operation to be done on the filter elements provided
		 in an octect string."
        ::= { ccNetFilterListEntry 6 }

--
-- Policy parameters (route map is another name for policy)
--
ccPolicyTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF CcPolicyEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Table of policy definitions."
        ::= { cascpolicy 3 }

ccPolicyEntry OBJECT-TYPE
        SYNTAX  CcPolicyEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Entry containing information about policy entry."
        INDEX { ccPolicyIndex }
        ::= { ccPolicyTable 1 }

CcPolicyEntry ::=
        SEQUENCE {
            ccPolicyIndex
              INTEGER,
            ccPolicyFrom
              INTEGER,
            ccPolicyTo
              INTEGER,
            ccPolicyName
              DisplayString,
            ccPolicyAdminState
              INTEGER,
            ccPolicyAction
              INTEGER,
            ccPolicyMatchFlags
              INTEGER,
            ccPolicyMatchBgpCommunity
              INTEGER,
            ccPolicyMatchBgpOriginAs
              INTEGER,
            ccPolicyMatchBgpTransitAs
              INTEGER,
            ccPolicyMatchBgpLastAs
              INTEGER,
            ccPolicyMatchBgpOrigin
              INTEGER,
            ccPolicyMatchOspfRouteType
              INTEGER,
            ccPolicyMatchNetworkList
              OCTET STRING,
            ccPolicyMatchNetworkListAdd
              OCTET STRING,
            ccPolicyMatchNetworkListRem
              OCTET STRING,
            ccPolicyMatchNetworkPrefixLengthMin
              INTEGER,
            ccPolicyMatchMetric
              INTEGER,
            ccPolicyMatchNextHop
              INTEGER,
            ccPolicyMatchTag
              INTEGER,
            ccPolicySetFlags
              INTEGER,
            ccPolicySetBgpWeight
              INTEGER,
            ccPolicySetBgpPath
              INTEGER,
            ccPolicySetBgpCommunityType
              INTEGER,
            ccPolicySetBgpCommunity
              INTEGER,
            ccPolicySetBgpMultiExitDiscriminator
              INTEGER,
            ccPolicySetBgpOrigin
              INTEGER,
            ccPolicySetOspfMetricType
              INTEGER,
            ccPolicySetMetric
              INTEGER,
            ccPolicySetNextHop
              INTEGER,
            ccPolicySetTag
              INTEGER,
            ccPolicyRowState
              INTEGER,
            ccPolicySequenceNumber
              INTEGER,
            ccPolicyMatchNetworkPrefixLengthMax
              INTEGER
              }
        
ccPolicyIndex OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "The policy number."
        ::= { ccPolicyEntry 1 }

ccPolicyFrom OBJECT-TYPE
        SYNTAX  INTEGER {
                bgp(1),
                ospf(2),
                rip(3),
		static(4),
		direct(5),
		any(6),
		aggregate(7)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Import/Export routes from these protocols.
	 Once the record is committed, this field
	 can not be modified."
        ::= { ccPolicyEntry 2 }

ccPolicyTo OBJECT-TYPE
       SYNTAX INTEGER {
              bgp(1),
              ospf(2),
              rip(3),
              table(4)
              }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Export routes to one of these protocols.
	 If table, import routes to routing table.
	 Once the record is committed, this field
	 can not be modified."
        ::= { ccPolicyEntry 3 }

ccPolicyName OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "The policy name."
        ::= { ccPolicyEntry 4 }

ccPolicyAdminState OBJECT-TYPE 
        SYNTAX  INTEGER {
          enable(1),
          disable(2)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines this route map's admin state. Enable(1) will enable
	 the route map for use, while disable(2) will disable the
	 use of this route map."
        ::= { ccPolicyEntry 5 }

ccPolicyAction OBJECT-TYPE 
        SYNTAX  INTEGER {
          allow(1),
          deny(2),
          originate-default(3)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Action to take on this policy"
        ::= { ccPolicyEntry 6 }

ccPolicyMatchFlags OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
	"This object supports a bitwise encoding of matching parameters
	 associated with this policy.

	 The defined values are bit-wise encoded as follows:
		2^0		- match on bgp community
		2^1		- match on bgp origin as
		2^2		- match on bgp transit as
		2^3		- match on bgp last as
		2^27		- match on max prefix length
		2^28		- match on min prefix length
		2^29		- match on metric
		2^30		- match on next hop
		2^31		- match on tag"
        ::= { ccPolicyEntry 7 }

ccPolicyMatchBgpCommunity OBJECT-TYPE
	SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Community to match."
        ::= { ccPolicyEntry 8 }

ccPolicyMatchBgpOriginAs OBJECT-TYPE
	SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Origin AS in AS-path to match."
        ::= { ccPolicyEntry 9 }

ccPolicyMatchBgpTransitAs OBJECT-TYPE
	SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "intermediate AS in AS-path to match."
        ::= { ccPolicyEntry 10 }

ccPolicyMatchBgpLastAs OBJECT-TYPE
	SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Last AS in AS-path to match."
        ::= { ccPolicyEntry 11 }

ccPolicyMatchBgpOrigin OBJECT-TYPE 
        SYNTAX  INTEGER {
          igp(1),
          egp(2),
          incomplete(3),
          none (4)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines matching on Bgp Origin. Default is None (1)"
        ::= { ccPolicyEntry 12 }
        
ccPolicyMatchOspfRouteType OBJECT-TYPE 
        SYNTAX  INTEGER {
          intra(1),
          inter(2),
          ext1(3),
          ext2(4),
          none (5)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines matching on Ospf Route type. The default
	 value is None(1)."
        ::= { ccPolicyEntry 13 }

ccPolicyMatchNetworkList OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
        "Lists associated with this list in the octect string.
         The format of the string field:
         | number of elements (max 100, ord16)| list number (id) ..."
        ::= { ccPolicyEntry 14 }

ccPolicyMatchNetworkListAdd OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Lists associated with this list in the octect string.
         The format of the string field:
         | number of elements (max 100, ord16)| list number (id) ..."
        ::= { ccPolicyEntry 15 }

ccPolicyMatchNetworkListRem OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Lists associated with this list in the octect string.
         The format of the string field:
         | number of elements (max 100, ord16)| list number (id) ..."
        ::= { ccPolicyEntry 16 }

ccPolicyMatchNetworkPrefixLengthMin OBJECT-TYPE 
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Matching parameter to define the shortest 
	 network prefix length allowed. Allowed range is 0-32."
        ::= { ccPolicyEntry 17 }

ccPolicyMatchMetric OBJECT-TYPE 
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Matching parameter to define the metric allowed."
        ::= { ccPolicyEntry 18 }

ccPolicyMatchNextHop OBJECT-TYPE 
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Matching parameter to define the next hop allowed."
        ::= { ccPolicyEntry 19 }

ccPolicyMatchTag OBJECT-TYPE
	SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Tag to match."
        ::= { ccPolicyEntry 20 }

ccPolicySetFlags OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
	"This object supports a bitwise encoding of setable parameters
	 associated with this policy.

	 The defined values are bit-wise encoded as follows:
		2^0		- set bgp weight
		2^1		- set bgp path
		2^2		- set bgp community
		2^3		- set bgp MED
		2^4		- set bgp atomic aggregator
		2^29		- set metric
		2^30		- set next hop
		2^31		- set tag"
        ::= { ccPolicyEntry 21 }

ccPolicySetBgpWeight OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the BGP weight for the route. Valid values are
	 0 - 65535, with default value of 65535."
        ::= { ccPolicyEntry 22 }

ccPolicySetBgpPath OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the multiple number of the local AS number
         to be prepended to the exising segment"
        ::= { ccPolicyEntry 23 }

ccPolicySetBgpCommunityType OBJECT-TYPE
        SYNTAX  INTEGER {
            replacement(1),
            additive(2),
	    none(3)
            }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the Community Modification type. The default value
	 is no-modification(6)."
        ::= { ccPolicyEntry 24 }
    
ccPolicySetBgpCommunity OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Community value to be used with above type. "
        ::= { ccPolicyEntry 25 }

ccPolicySetBgpMultiExitDiscriminator OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines value to replace the existing one. The valid values
	 are 0 - 4294967295."
        ::= { ccPolicyEntry 26 }

ccPolicySetBgpOrigin OBJECT-TYPE
        SYNTAX  INTEGER {
          igp(1),
          egp(2),
          incomplete(3),
          none (4)
        }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the route origin to be set to."
        ::= { ccPolicyEntry 27 }

ccPolicySetOspfMetricType OBJECT-TYPE
        SYNTAX  INTEGER {
            external_type_1(1),
            external_type_2(2)
            }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the OSPF metric type for export.
	 Default valus is external_type_2(2)."
        ::= { ccPolicyEntry 28 }

ccPolicySetMetric OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the metric that BGP/OSPF/RIP route should use.
         For BGP this defines the local preference.
         Valid Values are 0 - 4294967295."
        ::= { ccPolicyEntry 29 }

ccPolicySetNextHop OBJECT-TYPE 
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the next hop to be assigned to routes that passed the
	 through the matching parameters."
        ::= { ccPolicyEntry 30 }

ccPolicySetTag OBJECT-TYPE 
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the tag to be assigned to routes that passed the
	 through the matching parameters. Valid values are 0 - 4294967295.
	 The default value is 4294967295."
        ::= { ccPolicyEntry 31 }

ccPolicyRowState OBJECT-TYPE 
	SYNTAX	INTEGER {
		create(1),
		delete(2),
		commit(3)
		}
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines this route map's create or delete status.
	 SNMP agent must send row state commit, at the end,
	 for this record."
        ::= { ccPolicyEntry 32 }

ccPolicySequenceNumber OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the sequence number for this route map.
         The sequence number is just an indication of the
         position of a new route map is to have in the list of
         route maps already configured.
         Default value is 0. Valid Values are 0 - 4294967295."
        ::= { ccPolicyEntry 33 }

ccPolicyMatchNetworkPrefixLengthMax OBJECT-TYPE 
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Matching parameter to define the longest 
	 network prefix length allowed. Allowed range is 0-32."
        ::= { ccPolicyEntry 34 }

--
-- Associative Table between neighbors and route maps
--
ccPolicyNeighborAssocTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF CcPolicyNeighborAssocEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Association table between neighbors
                and route maps."
        ::= { cascpolicy 4 }

ccPolicyNeighborAssocEntry  OBJECT-TYPE
        SYNTAX  CcPolicyNeighborAssocEntry
        ACCESS  not-accessible  
        STATUS  mandatory
        DESCRIPTION
                "Entry containing information about neighbors and lists."
        INDEX { ccPolicyNeighborAssocAddr,
                ccPolicyNeighborAssocRouteMapIndex }
  ::= { ccPolicyNeighborAssocTable 1 }

CcPolicyNeighborAssocEntry ::=
	SEQUENCE {
		ccPolicyNeighborAssocAddr
			IpAddress,
		ccPolicyNeighborAssocRouteMapIndex
			INTEGER,
		ccPolicyNeighborAssocRowStatus
			INTEGER,
		ccPolicyNeighborAssocSequenceNumber
			INTEGER
		}

ccPolicyNeighborAssocAddr OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Neighbor IP address."
        ::= { ccPolicyNeighborAssocEntry 1 }
        
ccPolicyNeighborAssocRouteMapIndex OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Route map index number."
        ::= { ccPolicyNeighborAssocEntry 2 }

ccPolicyNeighborAssocRowStatus OBJECT-TYPE
        SYNTAX  INTEGER {
                create(1),
                delete(2)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Creating/deleting the row in the table."
        ::= { ccPolicyNeighborAssocEntry 3 }

ccPolicyNeighborAssocSequenceNumber OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the sequence number for this route map.
         The sequence number is just an indication of the
         position of a new route map is to have in the list of
         route maps already configured.
         Default value is 0. Valid Values are 0 - 4294967295."
        ::= { ccPolicyNeighborAssocEntry 4 }

--
-- Associative Table between interfaces and policies
--
ccPolicyInterfaceAssocTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF CcPolicyInterfaceAssocEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
        "Association table between interfaces
        and route maps."
        ::= { cascpolicy 5 }

ccPolicyInterfaceAssocEntry  OBJECT-TYPE
        SYNTAX  CcPolicyInterfaceAssocEntry
        ACCESS  not-accessible  
        STATUS  mandatory
        DESCRIPTION
        "Entry containing information about interfaces
	 and route maps."
        INDEX { ccPolicyInterfaceAssocAddr,
                ccPolicyInterfaceAssocRouteMapIndex }
  ::= { ccPolicyInterfaceAssocTable 1 }

CcPolicyInterfaceAssocEntry ::=
	SEQUENCE {
		ccPolicyInterfaceAssocAddr
			IpAddress,
		ccPolicyInterfaceAssocRouteMapIndex
			INTEGER,
		ccPolicyInterfaceAssocRowStatus
			INTEGER,
		ccPolicyInterfaceAssocSequenceNumber
			INTEGER
		}

ccPolicyInterfaceAssocAddr OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Interface IP address."
        ::= { ccPolicyInterfaceAssocEntry 1 }
        
ccPolicyInterfaceAssocRouteMapIndex OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "Route map index number."
        ::= { ccPolicyInterfaceAssocEntry 2 }

ccPolicyInterfaceAssocRowStatus OBJECT-TYPE
        SYNTAX  INTEGER {
                create(1),
                delete(2)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "Creating/deleting the row in the table."
        ::= { ccPolicyInterfaceAssocEntry 3 }

ccPolicyInterfaceAssocSequenceNumber OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
        "Defines the sequence number for this route map.
         The sequence number is just an indication of the
         position of a new route map is to have in the list of
         route maps already configured.
         Default value is 0. Valid Values are 0 - 4294967295."
        ::= { ccPolicyInterfaceAssocEntry 4 }

--
-- Static Route Table
--

staticRouteTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF StaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of static route entries."
	::= { cascstatic 1 }

staticRouteEntry OBJECT-TYPE
	SYNTAX	StaticRouteEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"Static route entry defines an IP address/mask and the 
		 next hop used to reach it. All static route entries are
		 added to the routing table."
	INDEX	{ staticIndex }
	::= { staticRouteTable 1 }

StaticRouteEntry ::=
	SEQUENCE {
		staticIndex
			INTEGER,
		staticPrefix
                        IpAddress,
		staticMask
			IpAddress,
		staticNextHopAddress
                        IpAddress,
		staticIfIndex
			INTEGER,
		staticPriority
			INTEGER,
		staticTag
			INTEGER,
		staticStatus
			INTEGER,
		staticSetFilter
			INTEGER,
		staticDiscard
			INTEGER


		}

staticIndex  OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Index into the static route table."
        ::= { staticRouteEntry 1 }

staticPrefix  OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Static route entry prefix."
        ::= { staticRouteEntry 2 }

staticMask  OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Static route entry network mask."
        ::= { staticRouteEntry 3 }

staticNextHopAddress  OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "IP address of next hop. If next hop is on an
		unnumbered interface, this should be 0.0.0.0 and
		the staticIfIndex should be used. If staticDiscard
		is set to enable this should be set to 0.0.0.0."
        ::= { staticRouteEntry 4 }


staticIfIndex  OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Lport for which this entry is defined. Required
		 if next hop is on unnumbered interface. Otherwise 
		 should be set to 0."
        ::= { staticRouteEntry 5 }

staticPriority  OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Priority of static route entry."
        ::= { staticRouteEntry 6 }


staticTag  OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-write
        STATUS mandatory
        DESCRIPTION
                "Used to group multiple entries together."
        ::= { staticRouteEntry 7 }

staticStatus OBJECT-TYPE
	SYNTAX INTEGER {
		valid(1),
		invalid(2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Status of entry. Set to valid to add entry. 
		 Set to invalid to delete entry"
	::= { staticRouteEntry 8 }

staticSetFilter OBJECT-TYPE
	SYNTAX INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Specifies whether an automatic source address 
		filter, using staticPrefix and staticMask, should
		be set on the interface to staticNextHopAddress."
	::= { staticRouteEntry 9 }

staticDiscard OBJECT-TYPE
	SYNTAX INTEGER {
		enable(1),
		disable(2)
	}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Specifies whether packets destined for staticPrefix
		should be discarded instead of forwarded. If this is 
		set to enable, staticNextHopAddress and staticIfIndex
		should be set to 0."
	::= { staticRouteEntry 10 }

--
--	IP Filters Table
--
--
filterTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FilterEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A list of filter entries"
	::= { cascfilters 2 }

filterEntry OBJECT-TYPE
	SYNTAX FilterEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A filter Entry."
	INDEX { filterIndex }
	::= { filterTable 1 }

FilterEntry ::= SEQUENCE {
	filterAdminStatus
		INTEGER,
	filterIndex
		INTEGER,
	filterFlags
		INTEGER,
	filterTraceFlags
		INTEGER,
	filterSrcAddrLow
		IpAddress,
	filterSrcAddrHigh
		IpAddress,
	filterSrcMask
		IpAddress,
	filterDstAddrLow
		IpAddress,
	filterDstAddrHigh
		IpAddress,
	filterDstMask
		IpAddress,
	filterProtoLow
		INTEGER,
	filterProtoHigh
		INTEGER,
	filterTOS
		INTEGER,
	filterSrcPortLow
		INTEGER,
	filterSrcPortHigh
		INTEGER,
	filterDstPortLow
		INTEGER,
	filterDstPortHigh
		INTEGER
	}

filterAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
		enable  (1),
		disable (2)
		}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Filter administration status"
	::= {filterEntry 1}

filterIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The filter index"
	::= {filterEntry 2}

filterFlags OBJECT-TYPE
	SYNTAX INTEGER {
		accept (1),
		reject (2)
		}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter flags to accept/reject"
	::= {filterEntry 3}

filterTraceFlags OBJECT-TYPE
	SYNTAX INTEGER {
		notrace (1),
		trace   (2)
		}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter trace flags to trace a packet"
	::= {filterEntry 4}

filterSrcAddrLow OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The lower bound filter source address"
	::= {filterEntry 5}

filterSrcAddrHigh OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The upper bound filter source address"
	::= {filterEntry 6}

filterSrcMask OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The mask applied to the filter source address"
	::= {filterEntry 7}

filterDstAddrLow OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The lower bound filter destination address"
	::= {filterEntry 8}

filterDstAddrHigh OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The upper bound filter destination address"
	::= {filterEntry 9}

filterDstMask OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The mask applied to the filter destination address"
	::= {filterEntry 10}

filterProtoLow OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The lower bound for protocol"
	::= {filterEntry 11}

filterProtoHigh OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The upper bound for protocol"
	::= {filterEntry 12}

filterTOS OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The TOS field"
	::= {filterEntry 13}

filterSrcPortLow OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The lower bound for source port field"
	::= {filterEntry 14}

filterSrcPortHigh OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The upper bound for destination port field"
	::= {filterEntry 15}

filterDstPortLow OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The lower bound for source port field"
	::= {filterEntry 16}

filterDstPortHigh OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The upper bound for destination port field"
	::= {filterEntry 17}

filterbindTable OBJECT-TYPE
	SYNTAX SEQUENCE OF FilterbindEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A list of filter entries applied to an interface"
	::= { cascfilters 3 }

filterbindEntry OBJECT-TYPE
	SYNTAX FilterbindEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"An interface filter Binding Entry."
	INDEX { filterbindLport}
	::= { filterbindTable 1 }

FilterbindEntry ::= SEQUENCE {
	filterbindAdminStatus
		INTEGER,
	filterbindLport
		INTEGER,
	filterbindInbound
		OCTET STRING,
	filterbindOutbound
		OCTET STRING
	}

filterbindAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
		disableBoth (1),
		enableIn    (3),
		enableOut   (5),
		enableBoth  (7)
		}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Filters Admin Status enable/disable for inbound/outbound"
	::= {filterbindEntry 1}

filterbindLport OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Filters to be applied to a LPORT"
	::= {filterbindEntry 2}

filterbindInbound OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter list for inbound"
	::= {filterbindEntry 3}

filterbindOutbound OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter list for outbound"
	::= {filterbindEntry 4}

cktFilterbindTable OBJECT-TYPE
	SYNTAX SEQUENCE OF CktFilterbindEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A list of filter entries applied to a circuit"
	::= { cascfilters 4 }

cktFilterbindEntry OBJECT-TYPE
	SYNTAX CktFilterbindEntry
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A circuit filter Binding Entry."
	INDEX { cktFilterbindLport, cktFilterbindCircuit }
	::= { cktFilterbindTable 1 }

CktFilterbindEntry ::= SEQUENCE {
	cktFilterbindAdminStatus
		INTEGER,
	cktFilterbindLport
		INTEGER,
	cktFilterbindInbound
		OCTET STRING,
	cktFilterbindOutbound
		OCTET STRING,
	cktFilterbindCircuit
		INTEGER
	}

cktFilterbindAdminStatus OBJECT-TYPE
	SYNTAX INTEGER {
		disbaleBoth (1),
		enableIn    (3),
		enableOut   (5),
		enableBoth  (7)
		}
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Filters Admin Status enable/disable for inbound/outbound"
	::= {cktFilterbindEntry 1}

cktFilterbindLport OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Lport where circuit is located"
	::= {cktFilterbindEntry 2}

cktFilterbindInbound OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter list for inbound"
	::= {cktFilterbindEntry 3}

cktFilterbindOutbound OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"The filter list for outbound"
	::= {cktFilterbindEntry 4}

cktFilterbindCircuit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The circuit identifier for this entry is a 16 bit
		 unsigned value which contains either the DLCI for
		 a frame-relay interface, or a pair of 8 bit values
		 for the VPI/VCI on an ATM interface where the VPI
		 is in the high order bits and the VCI is in the low
		 order bits in standard network ordering"
	::= {cktFilterbindEntry 5}

-- 
-- 
-- NHRP General Client and Server Objects
--
nhrpGeneralObjects  OBJECT IDENTIFIER ::= { nhrpObjects 1}



--
-- The Next Hop Resolution Cache Table. This table represents the 
-- internetwork layer address to NBMA address cache that is 
-- maintained by both NHRP clients and servers.
--

nhrpNextHopResTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF NhrpNextHopResEntry
	ACCESS	    not-accessible
	STATUS      mandatory
	DESCRIPTION
		"This table contains mappings between internetwork layer 
		addresses and NBMA subnetwork layer addresses."
         ::= { nhrpGeneralObjects 1 }

nhrpNextHopResEntry OBJECT-TYPE
	SYNTAX      NhrpNextHopResEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"A cached mapping between an internetwork layer 
		address and an NBMA address. Entries can be created by 
		the network administrator using the nhrpNextHopResAdminStatus 
		column, or they may be added dynamically based on protocol 
		operation (including NHRP, SCSP, and others such as ATMARP).  
		Note that for the Jade Release, the 
		nhrpNextHopResInternetAddrType will be fixed at ipV4(1).  All 
		others will be rejected."
	INDEX       {    nhrpClientServerID,
                         nhrpNextHopResInternetworkAddrType,
                         nhrpNextHopResDestAddr,
                         nhrpNextHopResPrefixLength
                     }
	::= { nhrpNextHopResTable 1 }

NhrpNextHopResEntry ::= SEQUENCE {
	nhrpNextHopResInternetworkAddrType  INTEGER,
	nhrpNextHopResDestAddr              OCTET STRING,
	nhrpNextHopResPrefixLength          INTEGER,
	nhrpNextHopResNextHopAddr           OCTET STRING,
	nhrpNextHopResNbmaAddrType          INTEGER,
	nhrpNextHopResNbmaAddr              OCTET STRING,
	nhrpNextHopResNbmaSubaddr           OCTET STRING,
	nhrpNextHopResEntryType             INTEGER,
	nhrpNextHopResEntryState            INTEGER,
	nhrpNextHopResNegotiatedMtu         INTEGER,
	nhrpNextHopResAdminStatus           INTEGER,
	nhrpClientServerID                  INTEGER
     	}

nhrpNextHopResInternetworkAddrType OBJECT-TYPE
	SYNTAX INTEGER {
			ipV4 (1)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The internetwork layer address type of this Next Hop 
		Resolution Cache entry. The value of this object indicates 
		how to interpret the values of nhrpNextHopResDestAddr and 
		nhrpNextHopResNextHopAddr.  Note that the only acceptable 
		value for the Jade Release if ipV4(1).  All others will be 
		rejected."
	::= { nhrpNextHopResEntry 1 }

nhrpNextHopResDestAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the internetwork address of the destination."
	::= { nhrpNextHopResEntry 2 }

nhrpNextHopResPrefixLength OBJECT-TYPE
	SYNTAX      INTEGER (0..65535)
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The number of bits that define the internetwork layer prefix 
		associated with the nhrpNextHopResDestAddr."
	::= { nhrpNextHopResEntry 3 }

nhrpNextHopResNextHopAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the internetwork address of the next hop."
	::= { nhrpNextHopResEntry 4 }

nhrpNextHopResNbmaAddrType OBJECT-TYPE
	SYNTAX  INTEGER {
			nsap   (3),	
			e164	(8),
			e164WithNsap (15)
			}
	ACCESS  read-write
	STATUS  mandatory
	DESCRIPTION
		"The NBMA address type of this Next Hop Resolution Cache 
		entry. The value of this object indicates how to interpret 
		the values of nhrpNextHopResNbmaAddr and 
		nhrpNextHopResNbmaSubaddr.  Note that for the Jade Release, 
		only the following values are acceptable:
		e164(8), nsap(3), or e164WithNsap(15).  All others will be 
		rejected."
        DEFVAL {nsap} 
	::= { nhrpNextHopResEntry 5 }

nhrpNextHopResNbmaAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the NBMA subnetwork address of the next hop."
	::= { nhrpNextHopResEntry 6 }

nhrpNextHopResNbmaSubaddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the NBMA subaddress of the next hop. If there 
		is no subaddress concept for the NBMA address family, this 
		value will be a zero-length OCTET STRING."
	::= { nhrpNextHopResEntry 7 }

nhrpNextHopResEntryType OBJECT-TYPE
	SYNTAX      INTEGER {
			register(1),
			resolve(2),
			transit(3),
			staticVolatile(4),
			staticNonVolatile(5),
			atmarp(6),
			other(7)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"An indication of how this Next Hop Resolution Cache entry was 
		created. The values are:
		'register(1)' In a server, added based on a client registration
		'resolve(2)'  In a client, added based on receiving a NHRP
			Resolution Reply.
		'transit(3)'  In a transit server, added by examining a 
			forwarded NHRP packet.
		'staticVolatile(4)' In a client or server, manually added by 
			the administrator. The entry is volatile and will 
			not be restored after a reset.
		'staticNonVolatile(5)' In a client or server, manually added 
			by the administrator. The entry is non-volatile and 
			will be restore after a reset.
		'atmarp(6)'   The entry was added by ATMARP.
		'other(7)'    The entry was added by some other means.
		This value cannot be modified once the entry is active."
	DEFVAL      { staticVolatile }
	::= { nhrpNextHopResEntry 8 }

nhrpNextHopResEntryState OBJECT-TYPE
	SYNTAX      INTEGER {
			incomplete(1),
			completePos(2),
			completeNeg(3)
			}
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"An indication of the state of this entry. The values are:
		'incomplete(1)' The client has sent a NHRP Resolution 
			Request but has not yet received the NHRP Resolution 
			Reply	
		'completePos(2)' For a client or server, this is a cached 
			valid mapping.
		'completeNeg(3)' For a server, this is a cached negative 
			mapping."
	::= { nhrpNextHopResEntry 9 }

nhrpNextHopResNegotiatedMtu OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The maximum transmission unit (MTU) that was negotiated or 
		registered for this entity."
	::= { nhrpNextHopResEntry 10 }


nhrpNextHopResAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
			up (1),
			down (2),
			deleted (3)
			}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry."
	::= { nhrpNextHopResEntry 11 }

nhrpClientServerID OBJECT-TYPE
	SYNTAX  INTEGER 
	ACCESS  read-write
	STATUS mandatory
	DESCRIPTION
		"One of the indices to this table.  Note that the 
		corresponding client or server table must be added before 
		adding the entry in this table.  Also note that the Default 
		Client/Server ID (=1) should always be present."
	::= { nhrpNextHopResEntry 12 }


-- 
-- NHRP Client Objects
--
nhrpClientObjects OBJECT IDENTIFIER ::= { nhrpObjects 2 }


--
-- The NHRP Client Table. The NHRP Client Table contains entries for 
-- each client associated with this agent. Some agents will allow 
-- entries to be created and deleted from this table which 
-- starts and stops the client entity on the station.
--

nhrpClientTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF NhrpClientEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Information about NHRP clients (NHCs) managed by this agent."
	::= { nhrpClientObjects 1 }

nhrpClientEntry OBJECT-TYPE
	SYNTAX      NhrpClientEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Information about a single NHC."
	INDEX       { nhrpClientIndex }
	::= { nhrpClientTable 1 }

NhrpClientEntry ::= SEQUENCE {
	nhrpClientIndex                 INTEGER,
	nhrpClientInternetworkAddrType  INTEGER,
	nhrpClientInternetworkAddr      OCTET STRING,
	nhrpClientNbmaAddrType          INTEGER,
	nhrpClientNbmaAddr              OCTET STRING,
	nhrpClientNbmaSubaddr           OCTET STRING,
	nhrpClientRegistration          INTEGER,
	nhrpClientRequestTimeout        INTEGER,
	nhrpClientRequestRetries        INTEGER,
	nhrpClientDefaultMtu            INTEGER,
	nhrpClientAdminStatus           INTEGER,
	nhrpClientRequestBackoff        INTEGER,
	nhrpClientName                  DisplayString
	}

nhrpClientIndex OBJECT-TYPE
	SYNTAX      INTEGER (0..65535)
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"An identifier for the NHRP client that is unique 
		within the scope of this agent.  Note that only the
		index of 1 is allowed for the Jade Release since there 
		can only be one Client per node."
	::= { nhrpClientEntry 1 }

nhrpClientInternetworkAddrType OBJECT-TYPE
	SYNTAX      INTEGER {
			ipV4   (1)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The type of the internetwork layer address of this client. 
		This object indicates how the value of 
		nhrpClientInternetworkAddr is to be interpreted. Note that 
		the only acceptable value for the Jade Release if ipV4(1).  
		All others will be rejected."
        DEFVAL {ipV4} 
	::= { nhrpClientEntry 2 }

nhrpClientInternetworkAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the internetwork layer address of this client."
	::= { nhrpClientEntry 3 }

nhrpClientNbmaAddrType OBJECT-TYPE
	SYNTAX INTEGER  {
			nsap   (3),	
			e164	(8),
			e164WithNsap (15)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The type of the NBMA subnetwork address of this client. This 
		object indicates how the values of nhrpClientNbmaAddr and  
		nhrpClientNbmaSubaddr are to be interpreted. Note that for the
		Jade Release, only the following values are acceptable:
		e164(8), nsap(3), or e164WithNsap(15).  All others will be 
		rejected."
        DEFVAL {nsap} 
	::= { nhrpClientEntry 4 }

nhrpClientNbmaAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The NBMA subnetwork address of this client."
	::= { nhrpClientEntry 5 }

nhrpClientNbmaSubaddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The NBMA subnetwork subaddress of this client. For NBMA 
		address families without a subaddress concept, this will be 
		a zero-length OCTET STRING."
	::= { nhrpClientEntry 6 }

nhrpClientRegistration  OBJECT-TYPE
	SYNTAX      INTEGER {
			notRegistered(1),
			registering(2),
			registered(3),
			reRegisteringFault(4)
			}
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The registration state of this client."
	::= { nhrpClientEntry 7 }

nhrpClientRequestTimeout OBJECT-TYPE
	SYNTAX      INTEGER (1..900)
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The number of seconds that the client will wait before
		 timing out an NHRP request."
	DEFVAL      { 10 }
	::= { nhrpClientEntry 8 }

nhrpClientRequestRetries OBJECT-TYPE
	SYNTAX      INTEGER (0..65535)
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The number of times the client will retry the request before 
		failure. A value of 0 means don't retry. A value of 65535 
		means retry forever."
	DEFVAL      { 3 }
	::= { nhrpClientEntry 9 }

nhrpClientDefaultMtu OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The default maximum transmission unit (MTU) of the client. 
		This will be initialized by the agent to the MTU of the 
		LIS/LAG if no value is specified during creation."
	DEFVAL      { 9180 }
	::= { nhrpClientEntry 10 }

nhrpClientAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
			up (1),
			down (2)
			}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry.  Note that when an object of a row is 
		changed while the admin status is up, the admin status will 
		be set to down, the change will be set, then the admin status 
		will be set to up again.  When an admin status is down for 
		the client, this overrides the nhrpLportClient object. Also
		note that this entry must exist before enabling 
		nhrpLportClient."
	::= { nhrpClientEntry 11 }

nhrpClientRequestBackoff OBJECT-TYPE
	SYNTAX      INTEGER (0..65535)
	ACCESS      read-write
	STATUS      mandatory
	  DESCRIPTION
		"The number of seconds that the client will wait before each 
		retry"
	::= { nhrpClientEntry 12 }


nhrpClientName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"A unique name identifying this client. This is needed for 
		a possible PRAM upload (20 bytes)"
	::= {nhrpClientEntry 13}


-- 
-- Note nhrpClientObjects 2 was intentionally skipped to be consistent
-- with standard.
--

--
-- The NHRP Client StatisticsTable. The NHRP Client Statistics Table 
-- contains NHRP statistics maintained by a client.
--

nhrpClientStatTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF NhrpClientStatEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
	    	"This table contains statistics collected by NHRP clients."
	::= { nhrpClientObjects 3 }

nhrpClientStatEntry OBJECT-TYPE
	SYNTAX      NhrpClientStatEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
	    	"Statistics collected by a NHRP client.  Note that for the
		Jade Release the only valid nhrpClientIndex is 1, since only 
		one NHC will be allowed per Node."
	INDEX       { nhrpClientIndex }
	::= { nhrpClientStatTable 1 }

NhrpClientStatEntry ::= SEQUENCE {
	nhrpClientStatTxResolveReq			Counter,
	nhrpClientStatRxResolveReplyAck	    		Counter,
	nhrpClientStatRxResolveReplyNakNoBinding    	Counter,
	nhrpClientStatRxResolveReplyNakNotUnique    	Counter,
	nhrpClientStatRxPurgeReq		  	Counter,
	nhrpClientStatTxPurgeReply			Counter,
	nhrpClientStatTxError		     		Counter,
	nhrpClientStatRxErrUnrecognizedExtension    	Counter,
	nhrpClientStatRxErrSubnetworkIDMismatch     	Counter,
	nhrpClientStatRxErrLoopDetected	    		Counter,
	nhrpClientStatRxErrProtoAddrUnreachable     	Counter,
	nhrpClientStatRxErrProtoError	      		Counter,
	nhrpClientStatRxErrSduSizeExceeded	 	Counter,
	nhrpClientStatRxErrInvalidExtension		Counter,
	nhrpClientStatRxErrAuthenticationFailure    	Counter,
	nhrpClientStatRxErrHopCountExceeded		Counter
     }

nhrpClientStatTxResolveReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Resolution Requests transmitted by this 
		client."
	::= { nhrpClientStatEntry 1 }

nhrpClientStatRxResolveReplyAck OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of positively acknowledged NHRP Resolution Replies 
		received by this client."
	::= { nhrpClientStatEntry 2 }

nhrpClientStatRxResolveReplyNakNoBinding OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Resolution Replies received by this 
		client that contained the code indicating 'No Internetworking
		Layer Address to NBMA Address Binding Exists'."
	::= { nhrpClientStatEntry 3 }

nhrpClientStatRxResolveReplyNakNotUnique OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
        DESCRIPTION
		"The number of NAKed NHRP Resolution Replies received by this 
		client that contained the code indicating 'Binding Exists But
		Is Not Unique'."
	::= { nhrpClientStatEntry 4 }

nhrpClientStatRxPurgeReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Requests received by this client."
	::= { nhrpClientStatEntry 5 }

nhrpClientStatTxPurgeReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Replies transmitted by this client."
	::= { nhrpClientStatEntry 6 }

nhrpClientStatTxError OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by 
		this client."
	::= { nhrpClientStatEntry 7 }

nhrpClientStatRxErrUnrecognizedExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Unrecognized Extension'."
	::= { nhrpClientStatEntry 8 }

nhrpClientStatRxErrSubnetworkIDMismatch OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Subnetwork ID Mismatch'."
	::= { nhrpClientStatEntry 9 }

nhrpClientStatRxErrLoopDetected OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'NHRP Loop Detected'."
	::= { nhrpClientStatEntry 10 }

nhrpClientStatRxErrProtoAddrUnreachable OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Protocol Address Unreachable'."
	::= { nhrpClientStatEntry 11 }

nhrpClientStatRxErrProtoError OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Protocol Error'."
	::= { nhrpClientStatEntry 12 }

nhrpClientStatRxErrSduSizeExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'NHRP SDU Size Exceeded'."
	::= { nhrpClientStatEntry 13 }

nhrpClientStatRxErrInvalidExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Invalid Extension'."
	::= { nhrpClientStatEntry 14 }

nhrpClientStatRxErrAuthenticationFailure OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Authentication Failure'."
	::= { nhrpClientStatEntry 15 }

nhrpClientStatRxErrHopCountExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		client with the error code 'Hop Count Exceeded'."
	::= { nhrpClientStatEntry 16 }

--
-- NHRP Server Objects
--
nhrpServerObjects OBJECT IDENTIFIER ::= { nhrpObjects 3 }

--
-- The NHRP Next Hop Server Table. The NHRP Server Table contains entries 
-- for each server associated with this agent. Some agents will allow 
-- entries to be created and deleted from this table which starts and 
-- stops the server entity on the station.
--

nhrpServerTable OBJECT-TYPE SYNTAX      SEQUENCE OF NhrpServerEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"This table contains information for a set of NHSes 
		associated with this agent."
	::= { nhrpServerObjects 1 }

nhrpServerEntry OBJECT-TYPE
	SYNTAX      NhrpServerEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
	    	"Information about a single NHS."
	INDEX       { nhrpServerIndex }
	::= { nhrpServerTable 1 }

NhrpServerEntry ::= SEQUENCE {
	nhrpServerIndex	     		   	INTEGER,
	nhrpServerInternetworkAddrType		INTEGER,
	nhrpServerInternetworkAddr     		OCTET STRING,
	nhrpServerNbmaAddrType	 		INTEGER,
	nhrpServerNbmaAddr	    		OCTET STRING,
	nhrpServerNbmaSubaddr	 		OCTET STRING,
	nhrpServerNbmaSubnetworkID      	INTEGER,
	nhrpServerAuthentication        	INTEGER,
	nhrpServerCurrentClients        	Gauge,
	nhrpServerMaxClients	   		INTEGER,
	nhrpServerAdminStatus	  		INTEGER,
	nhrpServerName                          DisplayString
     }

nhrpServerIndex OBJECT-TYPE
	SYNTAX      INTEGER (0..65536)
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"An identifier for the server that is unique within the 
		scope of this agent.  Multiple servers could be present
		to represent the different ATM clouds they serve.  However,
		there will always be one Default Server Index (=1) to represent
		the ATM cloud of the trunk ports."
	::= { nhrpServerEntry 1 }

nhrpServerInternetworkAddrType OBJECT-TYPE
	SYNTAX      INTEGER  {
		ipV4  (1)
		}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The type of the internetwork layer address of this server. 
		This object is used to interpret the value of 
		nhrpServerInternetworkAddr. Note that the only acceptable 
		value for the Jade Release if ipV4(1).  All others will be 
		rejected."
        DEFVAL {ipV4} 
	::= { nhrpServerEntry 2 }

nhrpServerInternetworkAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
	    	"The value of the internetwork layer address of this server."
	::= { nhrpServerEntry 3 }

nhrpServerNbmaAddrType OBJECT-TYPE
	SYNTAX INTEGER  {
		nsap   (3),	
		e164	(8),
		e164WithNsap (15)
		}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The type of the NBMA subnetwork address of this server. This 
		object is used to interpret the value of nhrpServerNbmaAddr.
		Note that for the Jade Release, only the following values are 
		acceptable:  e164(8), nsap(3), or e164WithNsap(15).  All 
		others will be rejected."
        DEFVAL {nsap} 
	::= { nhrpServerEntry 4 }

nhrpServerNbmaAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the NBMA subnetwork address of this server."
	::= { nhrpServerEntry 5 }

nhrpServerNbmaSubaddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE (0..60))
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The value of the NBMA subnetwork subaddress of this server. 
		For NBMA address families without a subaddress concept, this 
		will be a zero-length OCTET STRING."
	::= { nhrpServerEntry 6 }

nhrpServerNbmaSubnetworkID OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The NBMA subnetwork identifier associated with this server."
        DEFVAL {0} 
	::= { nhrpServerEntry 7 }

nhrpServerAuthentication OBJECT-TYPE
	SYNTAX      INTEGER {
			none(1),
			password(2),
			keyedMd5(3),
			other(4)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The type of authentication supported by this NHRP entity. 
		 Note that for the Jade Release the only acceptable value is 
		none(1).  All others will be rejected."
        DEFVAL {none} 
	::= { nhrpServerEntry 8 }

nhrpServerCurrentClients OBJECT-TYPE
	SYNTAX      Gauge
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of client currently registered with this server."
	::= { nhrpServerEntry 9 }

nhrpServerMaxClients OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The administrative maximum number of clients that this server
		 will allow to register with it."
        DEFVAL {1} 
	::= { nhrpServerEntry 10 }

nhrpServerAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
			up (1),
			down (2),
			delete (3)
			}
	  ACCESS	read-write
	  STATUS	mandatory
	  DESCRIPTION
		"Status of this entry. Note that when an object of a row is 
		changed while the admin status is up, the admin status will
		be set to down, the change will be set, then the admin status 
		will be set to up again.  When an admin status is down for 
		the server index, this overrides any nhrpLportServer object 
		using that index.   Also note that this entry must exist 
		before the nhrpLportServer object may reference it.  Once 
		any nhrpLportServer is set to this nhrpServerID, it may not 
		be deleted until the nhrpLportServer object is changed."
	::= { nhrpServerEntry 11 }

nhrpServerName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"A unique name identifying this server. This is needed for 
		a possible PRAM upload (20 bytes)"
	::= {nhrpServerEntry 12}


--
-- The Server Next Hop Resolution Table. The NHRP Server Next Hop Resolution 
-- Cache Table contains additional objects that a server keeps for each 
-- entry in its cache. This table extends the NHRP Next Hop Resolution Cache   
-- Table defined in the General Group.
--

nhrpServerNextHopResTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF NhrpServerNextHopResEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"This table extends the Next Host Resolution Cache Table for 
		NHSes."
	::= { nhrpServerObjects 2 }

nhrpServerNextHopResEntry OBJECT-TYPE
	SYNTAX      NhrpServerNextHopResEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Additional information kept by a NHS for each Next Hop 
		Resolution Cache entry.  Note that for the Jade Release the 
		only acceptable nhrpNextHopResInternetworkAddrType is ipV4 (1)"
	INDEX       {  nhrpClientServerID,
		       nhrpNextHopResInternetworkAddrType,
		       nhrpNextHopResDestAddr,
		       nhrpNextHopResPrefixLength
		   }
	::= { nhrpServerNextHopResTable 1 }

NhrpServerNextHopResEntry ::= SEQUENCE {
	nhrpServerNextHopResUniqueness      INTEGER
     }


-- 
-- Note nhrpServerNextHopResEntry 1 was intentionally skipped to be consistent
-- with standard.
--

nhrpServerNextHopResUniqueness OBJECT-TYPE
	SYNTAX      INTEGER {
			true  (1),
			false (2)
			}
	ACCESS      read-write
	STATUS      mandatory
	DESCRIPTION
		"The Uniqueness indicator for this Next Hop Resolution
		Cache entry used in duplicate address detection. This value 
		cannot be changed after the entry is active."
	::= { nhrpServerNextHopResEntry 2 }

--
-- The Next Hop Server Statistics Table. The NHRP Server Statistics 
-- Table contains NHRP statistics maintained
-- by a server.
--

nhrpServerStatTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF NhrpServerStatEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
	    	"Statistics collected by Next Hop Servers."
	::= { nhrpServerObjects 3 }

nhrpServerStatEntry OBJECT-TYPE
	SYNTAX      NhrpServerStatEntry
	ACCESS      not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Statistics for a particular NHS. The statistics are broken 
		into received (Rx), transmitted (Tx) and forwarded (Fw)..."
	INDEX       { nhrpServerIndex }
	::= { nhrpServerStatTable 1 }

NhrpServerStatEntry ::= SEQUENCE {
	nhrpServerStatRxResolveReq			Counter,
	nhrpServerStatTxResolveReplyAck	   		Counter,
	nhrpServerStatTxResolveReplyNakNoBinding    	Counter,
	nhrpServerStatTxResolveReplyNakNotUnique    	Counter,

	nhrpServerStatRxRegisterReq	        	Counter,
	nhrpServerStatTxRegisterAck	       		Counter,
	nhrpServerStatTxRegisterNakCantServe        	Counter,
	nhrpServerStatTxRegisterNakOverflow		Counter,
	nhrpServerStatTxRegisterNakAlreadyReg       	Counter,
	nhrpServerStatRxPurgeReq		  	Counter,
	nhrpServerStatTxPurgeReq		  	Counter,
	nhrpServerStatRxPurgeReply			Counter,
	nhrpServerStatTxPurgeReply			Counter,

	nhrpServerStatRxErrUnrecognizedExtension    	Counter,
	nhrpServerStatRxErrSubnetworkIDMismatch     	Counter,
	nhrpServerStatRxErrLoopDetected	    		Counter,
	nhrpServerStatRxErrProtoAddrUnreachable     	Counter,
	nhrpServerStatRxErrProtoError	      		Counter,
	nhrpServerStatRxErrSduSizeExceeded	 	Counter,
	nhrpServerStatRxErrInvalidExtension		Counter,
	nhrpServerStatRxErrAuthenticationFailure    	Counter,
	nhrpServerStatRxErrHopCountExceeded		Counter,

	nhrpServerStatTxErrUnrecognizedExtension    	Counter,
	nhrpServerStatTxErrSubnetworkIDMismatch     	Counter,
	nhrpServerStatTxErrLoopDetected	    		Counter,
	nhrpServerStatTxErrProtoAddrUnreachable     	Counter,
	nhrpServerStatTxErrProtoError	      		Counter,
	nhrpServerStatTxErrSduSizeExceeded	 	Counter,
	nhrpServerStatTxErrInvalidExtension		Counter,
	nhrpServerStatTxErrAuthenticationFailure    	Counter,
	nhrpServerStatTxErrHopCountExceeded		Counter,

-- Transit NHS statistics
	nhrpServerStatFwResolveReq			Counter,
	nhrpServerStatFwResolveReply	       		Counter,
	nhrpServerStatFwRegisterReq	 	       	Counter,
	nhrpServerStatFwRegisterReply	     		Counter,
	nhrpServerStatFwPurgeReq		  	Counter,
	nhrpServerStatFwPurgeReply			Counter,
	nhrpServerStatFwError		     		Counter
     }

nhrpServerStatRxResolveReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Resolution Requests received by this 
		server."
	::= { nhrpServerStatEntry 1 }

nhrpServerStatTxResolveReplyAck OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of positively acknowledged NHRP Resolution Replies 
		transmitted by this server."
	::= { nhrpServerStatEntry 2 }

nhrpServerStatTxResolveReplyNakNoBinding OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Resolution Replies transmitted by
		this server with the code No Internetworking Layer Address 
		to NBMA Address Binding Exists."
	::= { nhrpServerStatEntry 3 }

nhrpServerStatTxResolveReplyNakNotUnique OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Resolution Replies transmitted by
		 this server with the code Binding Exists But Is Not Unique."
	::= { nhrpServerStatEntry 4 }

nhrpServerStatRxRegisterReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Registration Requests received by this 
		server."
	::= { nhrpServerStatEntry 5 }

nhrpServerStatTxRegisterAck OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of positively acknowledge NHRP Registration
		 Replies transmitted by this server."
	::= { nhrpServerStatEntry 6 }

nhrpServerStatTxRegisterNakCantServe OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Registration Replies transmitted 
		by this server with the code Can't Serve This Address."
	::= { nhrpServerStatEntry 7 }

nhrpServerStatTxRegisterNakOverflow OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Registration Replies transmitted 
		by this server with the code Registration Overflow."
	::= { nhrpServerStatEntry 8 }

nhrpServerStatTxRegisterNakAlreadyReg OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NAKed NHRP Registration Replies transmitted 
		by this server with the code Unique Internetworking Layer
		Address Already Registered."
	::= { nhrpServerStatEntry 9 }

nhrpServerStatRxPurgeReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Requests received by this server."
	::= { nhrpServerStatEntry 10 }

nhrpServerStatTxPurgeReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Requests transmitted by this server."
	::= { nhrpServerStatEntry 11 }

nhrpServerStatRxPurgeReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Replies received by this server."
	::= { nhrpServerStatEntry 12 }

nhrpServerStatTxPurgeReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
	    	"The number of NHRP Purge Replies transmitted by this server."
	::= { nhrpServerStatEntry 13 }

nhrpServerStatRxErrUnrecognizedExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code Unrecognized Extension."
	::= { nhrpServerStatEntry 14 }

nhrpServerStatRxErrSubnetworkIDMismatch OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code Subnetwork ID Mismatch."
	::= { nhrpServerStatEntry 15 }

nhrpServerStatRxErrLoopDetected OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code NHRP Loop Detected."
	::= { nhrpServerStatEntry 16 }

nhrpServerStatRxErrProtoAddrUnreachable OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code Protocol Address Unreachable."
	::= { nhrpServerStatEntry 17 }

nhrpServerStatRxErrProtoError OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code 'Protocol Error'."
	::= { nhrpServerStatEntry 18 }

nhrpServerStatRxErrSduSizeExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code 'NHRP SDU Size Exceeded'."
	::= { nhrpServerStatEntry 19 }

nhrpServerStatRxErrInvalidExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code 'Invalid Extension'."
	::= { nhrpServerStatEntry 20 }

nhrpServerStatRxErrAuthenticationFailure OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code 'Authentication Failure'."
	::= { nhrpServerStatEntry 21 }

nhrpServerStatRxErrHopCountExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets received by this 
		server with the error code 'Hop Count Exceeded'."
	::= { nhrpServerStatEntry 22 }

nhrpServerStatTxErrUnrecognizedExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by 
		this server with the error code 'Unrecognized Extension'."
	::= { nhrpServerStatEntry 23 }

nhrpServerStatTxErrSubnetworkIDMismatch OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by 
		this server with the error code 'Subnetwork ID Mismatch'."
	::= { nhrpServerStatEntry 24 }

nhrpServerStatTxErrLoopDetected OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by 
		this server with the error code 'NHRP Loop Detected'."
	::= { nhrpServerStatEntry 25 }

nhrpServerStatTxErrProtoAddrUnreachable OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		this server with the error code 'Protocol Address 
		Unreachable'."
	::= { nhrpServerStatEntry 26 }

nhrpServerStatTxErrProtoError OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		 this server with the error code 'Protocol Error'."
	::= { nhrpServerStatEntry 27 }

nhrpServerStatTxErrSduSizeExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		 this server with the error code 'NHRP SDU Size Exceeded'."
	::= { nhrpServerStatEntry 28 }

nhrpServerStatTxErrInvalidExtension OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		 this server with the error code 'Invalid Extension'."
	::= { nhrpServerStatEntry 29 }

nhrpServerStatTxErrAuthenticationFailure OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		 this server with the error code 'Authentication Failure'."
	::= { nhrpServerStatEntry 30 }

nhrpServerStatTxErrHopCountExceeded OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets transmitted by
		 this server with the error code 'Hop Count Exceeded'."
	::= { nhrpServerStatEntry 31 }

nhrpServerStatFwResolveReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Resolution Requests forwarded by this
		 server acting as a transit NHS."
	::= { nhrpServerStatEntry 32 }

nhrpServerStatFwResolveReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Resolution Replies forwarded by this
		 server acting as a transit NHS."
	::= { nhrpServerStatEntry 33 }

nhrpServerStatFwRegisterReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Registration Requests forwarded by this
		 server acting as a transit NHS."
	::= { nhrpServerStatEntry 34 }

nhrpServerStatFwRegisterReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Registration Replies forwarded by this 
		server acting as a transit NHS."
	::= { nhrpServerStatEntry 35 }

nhrpServerStatFwPurgeReq OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Purge Requests forwarded by this server
		 acting as a transit NHS."
	::= { nhrpServerStatEntry 36 }

nhrpServerStatFwPurgeReply OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Purge Replies forwarded by this server 
		acting as a transit NHS."
	::= { nhrpServerStatEntry 37 }

nhrpServerStatFwError OBJECT-TYPE
	SYNTAX      Counter
	ACCESS      read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of NHRP Error Indication packets forwarded by this 
		server acting as a transit NHS."
	::= { nhrpServerStatEntry 38 }


--
-- NHRP Flow Profile Table.  This table contains the criteria
-- associated with classifying an IP flow.
--

nhrpProfileTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF NhrpProfileEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of IP NHRP Flow profiles."
	::= { cascnhrp 2 }

nhrpProfileEntry OBJECT-TYPE
	SYNTAX	NhrpProfileEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP NHRP Flow profile contains information used to
		 classify and associate IP flows with QoS SVCs."
	INDEX	{ nhrpProfileIndex }
	::= { nhrpProfileTable 1 }

NhrpProfileEntry ::=
	SEQUENCE {
		nhrpProfileIndex
			INTEGER,
		nhrpProfileAdminStatus
			INTEGER,
		nhrpProfileName
			DisplayString,
		nhrpProfileSrcIPAdr
			IpAddress,
		nhrpProfileSrcIPAdrCidr
			IpAddress,
		nhrpProfileDstIPAdr
		     IpAddress,
	        nhrpProfileDstIPAdrCidr
		      IpAddress,
		nhrpProfileProt
			INTEGER,
		nhrpProfileSrcPort
			INTEGER,
		nhrpProfileDstPort
			INTEGER,
		nhrpProfileTOS
			INTEGER,
		nhrpDetectOnsetPeriod
			INTEGER,
		nhrpDetectAbatePeriod
			INTEGER,
		nhrpOnsetThres
			INTEGER,
		nhrpAbateThres
			INTEGER,
		nhrpProfMaxFlows
			INTEGER,
		nhrpProfMaxShortcuts
			INTEGER
		}

nhrpProfileIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The ID which maps to a NHRP Flow Profile name."
	::= { nhrpProfileEntry 1 }


nhrpProfileAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2),
		deleted (3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry.  Note that if this admin status is 
		down or deleted, this row may not be used in the 
		nhrpAssocTable.  Also note that if this profile entry 
		is already being used in the nhrpAssocTable, the admin 
		status will not be allowed to be set down or deleted."
	::= { nhrpProfileEntry 2 }

nhrpProfileName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"A unique name identifying this profile. This is needed for 
		a possible PRAM upload (20 bytes)"
	::= {nhrpProfileEntry 3}

nhrpProfileSrcIPAdr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Source IP address."
        DEFVAL {0} 
	::= { nhrpProfileEntry 4 }

nhrpProfileSrcIPAdrCidr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Source IP Address CIDR mask.  Note that a CIDR value of 0 
		indicates that the Source IP Address is a wildcard in the flow 
		profile"
        DEFVAL {0} 
	::= { nhrpProfileEntry 5 }

nhrpProfileDstIPAdr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Destination IP address."
        DEFVAL {0} 
	::= { nhrpProfileEntry 6 }

nhrpProfileDstIPAdrCidr OBJECT-TYPE
	SYNTAX	IpAddress
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Destination IP Address CIDR mask.  Note that a CIDR value of 0
		indicates that the Destination IP Address is a wildcard in 
		the flow profile"
        DEFVAL {0} 
	::= { nhrpProfileEntry 7 }

nhrpProfileProt OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"IP Protocol Type. Note that the value 0 indicates that the 
		protocol is a wildcard in the flow profile"
        DEFVAL {0} 
	::= { nhrpProfileEntry 8 }

nhrpProfileSrcPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The source protocol port.  Note that the value 0 indicates 
		that the source port is a wildcard in the flow profile"
        DEFVAL {0} 
	::= { nhrpProfileEntry 9 }

nhrpProfileDstPort OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The destination protocol port.  Note that the value 0
		 indicates that the destination port is a wildcard in the 
		flow profile."
        DEFVAL {0} 
	::= { nhrpProfileEntry 10 }

nhrpProfileTOS OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The type of service.  Note that the value 255 indicates that
		 the tos is a wildcard in the flow profile"
	DEFVAL {255} 		
	::= { nhrpProfileEntry 11 }

nhrpDetectOnsetPeriod OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The number of milliseconds associated with the onset 
		threshold.  The value must be a multiple of 10 and must
   		be at least 10."
        DEFVAL {10} 
	::= { nhrpProfileEntry 12 }

nhrpDetectAbatePeriod OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION	
		"The number of milliseconds associated with the 
		abatement threshold.  The value must be a multiple of 10
		and must be at least 10."
        DEFVAL {10} 
	::= { nhrpProfileEntry 13 }

nhrpOnsetThres OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The number of packets observed on the flow per 
		nhrpDetectOnset_Period for onset detection"
        DEFVAL {1} 
	::= { nhrpProfileEntry 14 }

nhrpAbateThres OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The number of packets observed on the flow per 
		nhrpDetectAbatePeriod for abate detection"
        DEFVAL {0} 
	::= { nhrpProfileEntry 15 }

nhrpProfMaxFlows OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum number of NHRP flows of this type that can be 
		detected at any one time on an lport"
        DEFVAL {1} 
	::= { nhrpProfileEntry 16}

nhrpProfMaxShortcuts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum number of NHRP shortcuts matching this flow that
		can be connected at any one time on an lport"
        DEFVAL {1} 
	::= { nhrpProfileEntry 17}

--
-- NHRP Lport table.  This table contains the 
-- necessary NHRP configuration objects per lport.
-- 

nhrpLportTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF NhrpLportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of lport configuration settings for NHRP"
	::= { cascnhrp 3 }

nhrpLportEntry OBJECT-TYPE
	SYNTAX	NhrpLportEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP NHRP Lport table entry contains configuration 
		information used by NHRP"
	INDEX	{ nhrpLportIndx}
	::= { nhrpLportTable 1 }

NhrpLportEntry ::=
	SEQUENCE {
		nhrpLportIndx
			INTEGER,
		nhrpLportAdminStatus
			INTEGER,
		nhrpLportClient
			INTEGER,
		nhrpLportServer
			INTEGER,
		nhrpLportMaxPCR
			INTEGER,
		nhrpLportMaxSCR
			INTEGER,
		nhrpLportMaxMCR
			INTEGER,
		nhrpLportMaxMBS
			INTEGER,
		nhrpMaxFlows
			INTEGER,
		nhrpMaxShortcuts
			INTEGER,
		nhrpLportUserGrpKey
			INTEGER,
		nhrpLportUserGrpDefRule
			INTEGER,
		nhrpLportR2RintSafety
			INTEGER,
		nhrpLportR2RextSafety
			INTEGER,
		nhrpLportNumReqGen
			Counter
		}

nhrpLportIndx OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The primary index of this entry within
		 the table which is lport."
	::= { nhrpLportEntry 1 }

nhrpLportAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry."
	::= { nhrpLportEntry 2 }

nhrpLportClient OBJECT-TYPE
        SYNTAX  INTEGER (0..1)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Enable/Disable the generation of NHRP requests per 
		lport (i.e.: act as a Proxy NHC).  This value
		corresponds to the nhrpClientIndex in the nhrpClientTable.  It
		references a particular client.  However, for the Jade 
		release we are only supporting one client per node, so 0 
		means disable and 1 means enable the client.  Note that this is
		superceded when the node level nhrpClientTable admin 
		status is down.  Also note that the 
		nhrpClientTable row must exists and be up before this object 
		can be enabled."
        DEFVAL {0} 
	::= { nhrpLportEntry 3}

nhrpLportServer OBJECT-TYPE
        SYNTAX  INTEGER (0..1536)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Enable/Disable the ability to forward/process NHRP
		requests.  This value corresponds to the nhrpServerIndex 			in the nhrpServerTable.  It is used to determine if the
		node is an egress to a different ATM Cloud.  The value of
		0 represents the disabling of an NHS per lport.
		Note that this is superceded when the node level 
		nhrpServerTable's admin status is down.  Also note that the 
		corresponding nhrpServerTable row must exists and be up 
		before this object can be enabled.  The limit on the range
		represents the number of lports on a switch."
        DEFVAL {0} 
	::= { nhrpLportEntry 4}


nhrpLportMaxPCR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum Peak Cell Rate for a data flow to and from
 		a given lport"
	::= { nhrpLportEntry 5}

nhrpLportMaxSCR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum Sustainable Cell Rate for a data flow to and from
		a given lport" 
	::= { nhrpLportEntry 6}

nhrpLportMaxMCR OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum Minimum Cell Rate for a data flow to and from
		a given lport"
	::= { nhrpLportEntry 7}

nhrpLportMaxMBS OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum - Maximum Burst Size for a data flow to and from
		a given lport"
        DEFVAL {32} 
	::= { nhrpLportEntry 8}

nhrpMaxFlows OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum number of NHRP flows that can be detected at any 
		one time on an lport.  Note that the sum of all the 
		nhrpProfMaxFlows per nhrpProfileEntry used in the Lport 
		Association table per lport should not exceed this value."
        DEFVAL {1} 
	::= { nhrpLportEntry 9}

nhrpMaxShortcuts OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Maximum number of NHRP shortcuts that can be connected at 
		any one time on an lport.  Note that the sum of all the 
		nhrpProfMaxShortcuts per nhrpProfileEntry used in the Lport
		Association table per lport should not exceed this value. 
		Also this value should not exceed nhrpMaxFlows."
        DEFVAL {1} 
	::= { nhrpLportEntry 10}

nhrpLportUserGrpKey OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The key specifying a user group for which this lport
		belongs.  A key with the value 0 is invalid (no key specified)"
	DEFVAL {0}
	::= { nhrpLportEntry 11}

nhrpLportUserGrpDefRule OBJECT-TYPE
	SYNTAX	INTEGER {
			  forward_process_all_requests  (1),
			  reject_all_requests  (2)
			} 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This object specifies the default rule for all NHRP requests.
		Note that the ipNHRPUserGrpTable key entries specify 
		exceptions to this rule, such that the opposite rule to the 
		one specified here is used for those explicit exceptions."
	DEFVAL {forward_process_all_requests}
	::= { nhrpLportEntry 12}

nhrpLportR2RintSafety OBJECT-TYPE
	SYNTAX  INTEGER {
       			disable (2),
	      		enable (1)
        }
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Router-to-Router safety mechanism option for when an NHRP 
		Resolution Request is initiated by an internal proxy NHC.  If 
		this flag is enabled and an egress NHS cannot resolve an NHRP 
		Resolution Request, it will terminate the request and send an
		NHRP Reply with the NHS's own NBMA address, so that the 
		shortcut terminates within the Cascade cloud.  Otherwise, if 
		this option is disabled and the next hop is over an ATM 
		interface, the request will be forwarded."
	DEFVAL {disable}
	::= { nhrpLportEntry 13}

nhrpLportR2RextSafety OBJECT-TYPE
	SYNTAX  INTEGER {
			disable (2),
		      	enable (1)
        }
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Router-to-Router safety mechanism option used when an
		NHRP Resolution Request is initiated by an external NHC.  
		When this option is enabled, if the destination of an NHRP
		Resolution Request is off the NBMA, but is NOT directly 
		connected to the egress NHS, the NHRP Resolution Request 
		will cause an error to be returned in the NHRP Resolution 
		Reply and no SVC will be established. Otherwise, if this 
		option is disabled and the next hop is over an 
		ATM interface, the request will be forwarded."
	DEFVAL {enable}
	::= { nhrpLportEntry 14}

nhrpLportNumReqGen OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of NHRP resolution requests generated from this 
		lport"
	::= { nhrpLportEntry 15}		



--
-- IP NHRP Lport/Flow Profile/TD Association table.  This table contains the 
-- association information necessary for establishing a SVC with
-- specific QoS parameters for a particular IP flow on an lport.
--

nhrpAssocTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF NhrpAssocEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of IP NHRP lport/Flow profile associations."
	::= { cascnhrp 4 }

nhrpAssocEntry OBJECT-TYPE
	SYNTAX	NhrpAssocEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP NHRP Lport table entry  contains information used to
		 associate IP flows with NHRP SVCs."
	INDEX	{ nhrpAssocLportIndex}
	::= { nhrpAssocTable 1 }

NhrpAssocEntry ::=
	SEQUENCE {
		nhrpAssocLportIndex
			INTEGER,
		nhrpAssocAdminStatus
			INTEGER,
		nhrpAssocRows
			OCTET STRING
		}

nhrpAssocLportIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The primary index of this entry within
		 the table which is lport."
	::= { nhrpAssocEntry 1 }


nhrpAssocAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2),
		deleted (3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry.  The deleted status is just used
		temporarily to delete all associations for an lport; it 
		should then be changed to down.  In this case, the octet 
		string for nhrpAssocRows will be empty."
	::= { nhrpAssocEntry 2 }

nhrpAssocRows OBJECT-TYPE
	SYNTAX	OCTET STRING
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This object is an encoded string, representing a list of 
		associations for an lport.  It is defined as a large string
		to reduce the number of SNMP sets for a table rewrite when
		a particular association is deleted or reordered.
		Bits 0-11    Profile ID
		Bits 10-20   Primary TD
		Bits 21-29   Secondary TD
		Bit 30       Alt/Min Flag  (Alt = 0, Min = 1)
		Bit 31       Admin Status  (Down = 0, Up = 1)"
	::= { nhrpAssocEntry 3 }





--
-- IP NHRP User Group table.  This table contains the 
-- user group keys per lport used for the allowing the
-- forwarding/processing of NHRP requests.
-- 

nhrpUserGrpTable OBJECT-TYPE
	SYNTAX	SEQUENCE OF NhrpUserGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"A list of NHRP User Group Keys per lport used to determine
		if an NHRP request should be forwarded/processed."
	::= { cascnhrp 5 }

nhrpUserGrpEntry OBJECT-TYPE
	SYNTAX	NhrpUserGrpEntry
	ACCESS	not-accessible
	STATUS	mandatory
	DESCRIPTION
		"An IP NHRP User Group table entry contains a NHRP user 
		group key"
	INDEX	{ nhrpUserGrpLportIndex, nhrpUserGrpIndex}
	::= { nhrpUserGrpTable 1 }

NhrpUserGrpEntry ::=
	SEQUENCE {
		nhrpUserGrpLportIndex
			INTEGER,
		nhrpUserGrpIndex
			INTEGER,
		nhrpUserGrpAdminStatus
			INTEGER,
		nhrpUserGrpKey
			INTEGER
		}

nhrpUserGrpLportIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The primary index of this entry within
		 the table which is lport."
	::= { nhrpUserGrpEntry 1 }

nhrpUserGrpIndex OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-only
	STATUS	mandatory
	DESCRIPTION
		"The secondary index of this entry within
		 the table which is the row index."
	::= { nhrpUserGrpEntry 2 }

nhrpUserGrpAdminStatus OBJECT-TYPE
	SYNTAX	INTEGER {
		up (1),
		down (2),
		deleted (3)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"Status of this entry."
	::= { nhrpUserGrpEntry 3}

nhrpUserGrpKey OBJECT-TYPE
	SYNTAX	INTEGER 
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The key specifying a user group which is an exception to the 
		default rule in nhrpUserGrpDefRule.  This key implicitly
		uses the opposite of the default rule.  For instance, if the
		default rule is forward/process all requests, then this entry 
		specifies to reject all requests with this user group key."
        DEFVAL {0} 
	::= { nhrpUserGrpEntry 4}

--
-- NHRP Per Node Objects
--

nhrpHopCount OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The hop count indicates the maximum number of NHSs that an
		 NHRP packet is allowed to traverse before being discarded. 
		 It is transmitted in the Fixed portion of each NHRP packet."
	DEFVAL {20}
	::= { cascnhrp 6 }


nhrpVersion OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The field indicates what version of generic address mapping 
		and management protocol is represented by the message.  It is 
		transmitted in the Fixed portion of each NHRP packet."
	DEFVAL {1}
	::= { cascnhrp 7 }

nhrpVendorID OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The Vendor ID identifies the vendor private information.  It
		 is transmitted in the Vendor Specific portion of each NHRP
		 packet"
	DEFVAL {0}
	::= { cascnhrp 8 }

nhrpExtMask OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"This mask indicates which extensions should be initiated by 
		the node.
		Bit 0 = Vendor Extension
		Bit 1 = Forward Transit Route Record
		Bit 2 = Reverse Transit Route Record
		Bit 3 = Responder Address"
	DEFVAL {0}
	::= { cascnhrp 9 }
		
nhrpRetries OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The number of retries performed for SVC establishment in case
		 of failures"
	DEFVAL {3}
	::= { cascnhrp 10 }

nhrpBackoff OBJECT-TYPE
	SYNTAX	INTEGER
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The period of time in millliseconds between retries perform 
		for SVC establishment in case of failures."
	DEFVAL {50}
	::= { cascnhrp 11 }

nhrpLogImpLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		disable_log     (1),
		fatal 		(2),
		critical 	(3),
		warning		(4),
		info_high	(5),
		info_med	(6),
		info_low	(7),
		info_debug      (8)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The logging importance level associated with NHRP request 
		and reply packets:
		disable_log:   logging disabled
		fatal :        out of memory
		critical:      all above, memory low
		warning:       all above, dropping events due to queueing 
			       overload
		info_high:     all above, Registration Request,
			       Registration Reply, Purge Request, Purge Reply
		info_med:      all above, Resolution Request, Resolution Reply
		info_low:      all above, Error Indication Message
		info_debug:   all above, Registration Refresh Requests/Replies"
	DEFVAL {disable_log}
	::= { cascnhrp 12}


nhrpLogDetailLevel OBJECT-TYPE
	SYNTAX	INTEGER {
		detail_low   (1),
		detail_med   (2),
		detail_high  (3),
		detail_debug (4)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The logging detail level associated with NHRP request 
		and reply packets.Registration Request:
		Detail Low:    client IP,  address family, NBMA address, NBMA 
      		subaddress, prefix length, preference  (for each CIE)
		Detail Med:    all above, destination IP, requester's IP, 
		requester's NBMA address,  requester's NBMA subaddress 
		Detail High:   all above, flags, request ID, hold time, MTU
		Detail Debug:  all above, Extension Info*

		Registration Reply:
		Detail Low:    status code, client IP,  address family, NBMA 
		address, NBMA subaddress, prefix length, preference       
		(for each CIE)
		Detail Med:    all above, requester's IP,  requester's NBMA 
		address, requester's NBMA subaddress 
		Detail High:   all above, flags, request ID, hold time, MTU
		Detail Debug:  all above, Extension Info*

		Resolution Request:
		Detail Low:    destination (requested) IP address, requester's 
		IP address 
		Detail Med:    all above, address family, requester's NBMA 
		address, requester's NBMA subaddress
		Detail High:   all above, flags, request ID, hold time, MTU
		Detail Debug:  all above, Extension Info*

		Resolution Reply:
		Detail Low:   status code, next hop IP address, address family,
		next hop NBMA address, next hop NBMA subaddress, prefix 
     		length, preference (for first CIE - the one with 
     		highest preference value) 
		Detail Med:   all above for multiple CIEs, requester's IP, 
     		requester's NBMA address, requester's NBMA subaddress
		Detail High:  all above, flags, request ID, hold time, MTU
		Detail Debug: all above, Extension Info*

		Purge Request:
		Detail Low:   client IP address, address family, 
		NBMA address, NBMA subaddress, prefix length (for each CIE)
		Detail Med:   all above, destination IP, requester's IP, 
		requester's NBMA address,  requester's NBMA subaddress 
		Detail High:  all above, flags, request ID, hold time
		Detail Debug: all above, Extension Info*

		Purge Reply:
		Detail Low:    status code, client IP address,  address family,
		NBMA address, NBMA subaddress, prefix length (for each CIE)
		Detail Med:    all above, destination IP, requester's IP, 
		requester's NBMA address,  requester's NBMA subaddress 
		Detail High:   all above, flags, request ID, hold time
		Detail Debug:  all above, Extension Info*

		Error Indication:
		Detail Low:   error code, source NBMA address, source NBMA 
    		subaddress, IP source, IP destination
		Detail Med:   all above, checksum 
		Detail High:  same as above
		Detail Debug: same as above"
	DEFVAL {detail_low}
	::= { cascnhrp 13}

nhrpLogForm OBJECT-TYPE
	SYNTAX	INTEGER {
		binary_format (1),
		text_format   (2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"The format associated with NHRP request and reply
		packets logging.  Note that the only acceptable value 
		for the Jade Release is text_format."
	DEFVAL {text_format}
	::= { cascnhrp 14}

nhrpBkdBndwdthRsv OBJECT-TYPE
	SYNTAX	INTEGER {
		disable (1),
		enable (2)
		}
	ACCESS	read-write
	STATUS	mandatory
	DESCRIPTION
		"This option is included in order to support backward feedback 
		(CCRMs and BCMs) from ports configured with the NRTS card.  If
		set, the backward traffic descriptor will contain a QoS class 
		of ABR with 34 cells per second bandwidth reservation.  
		Otherwise, the reverse traffic descriptor will be set to
		zero."
	DEFVAL {disable}
	::= { cascnhrp 15}

--
--  IGMP MIB - The following two tables reflect the IGMP MIB as defined
--  in "draft-ietf-idmr-igmp-mib-04.txt". They have been modified as
--  follows:
--	      - 3 new fields added to the interface table to include
--		    igmpInterfaceAdminStatus
--		    igmpInterfaceRobustnessVariable
--		    igmpInterfaceLastMemberQueryInterval
--	      - SYNTAX type "rowstatus"   changed to "INTEGER"
--	      - SYNTAX type "Integer32"   changed to "INTEGER"
--	      - SYNTAX type "TruthValue"  changed to "INTEGER"
--	      - SYNTAX type "Counter32"   changed to "Counter"
--	      - MAX-ACCESS changed to ACCESS
--	      - ACCESS type "read-create" changed to "read-write"
--	      - STATUS type "current"     changed to "mandatory"

--
--  The IGMP Interface Table
--

igmpInterfaceTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF IgmpInterfaceEntry
    ACCESS     not-accessible
    STATUS     mandatory
    DESCRIPTION
	    "The (conceptual) table listing the interfaces on which IGMP
	    is enabled."
    ::= { cascigmp 1 }

igmpInterfaceEntry OBJECT-TYPE
    SYNTAX     IgmpInterfaceEntry
    ACCESS     not-accessible
    STATUS     mandatory
    DESCRIPTION
	    "An entry (conceptual row) representing an interface on
	    which IGMP is enabled."
    INDEX      { igmpInterfaceIfIndex }
    ::= { igmpInterfaceTable 1 }

IgmpInterfaceEntry ::= SEQUENCE {
    igmpInterfaceIfIndex	       INTEGER,
    igmpInterfaceQueryInterval	       INTEGER,
    igmpInterfaceStatus 	       INTEGER,
    igmpInterfaceVersion	       INTEGER,
    igmpInterfaceQuerier	       IpAddress,
    igmpInterfaceQueryMaxResponseTime  INTEGER,
    igmpInterfaceQuerierPresentTimeout INTEGER,
    igmpInterfaceLeaveEnabled	       INTEGER,
    igmpInterfaceVersion1QuerierTimer  INTEGER,
    igmpInterfaceWrongVersionQueries   Counter,
    igmpInterfaceJoins		       Counter,
    igmpInterfaceLeaves 	       Counter,
    igmpInterfaceAdminStatus	       INTEGER,
    igmpInterfaceRobustnessVariable    INTEGER,
    igmpInterfaceLastMemberQueryIntvl  INTEGER
}

igmpInterfaceIfIndex OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The interface for which IGMP is enabled."
    ::= { igmpInterfaceEntry 1 }

igmpInterfaceQueryInterval OBJECT-TYPE
    SYNTAX     INTEGER
--  UNITS      "seconds"
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The frequency at which IGMP Host-Query packets are
	    transmitted on this interface."
    DEFVAL     { 125 }
    ::= { igmpInterfaceEntry 2 }

igmpInterfaceStatus OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The activation of a row enables IGMP on the interface.  The
	    destruction of a row disables IGMP on the interface."
    ::= { igmpInterfaceEntry 3 }

igmpInterfaceVersion OBJECT-TYPE
    SYNTAX     INTEGER { version1(1), version2(2) }
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The version of IGMP which is running on this interface.
	    This object can be used to configure a router capable of
	    running either value.  For IGMP to function correctly, all
	    routers on a LAN must be configured to run the same version
	    of IGMP on that LAN."
    DEFVAL     { version2 }
    ::= { igmpInterfaceEntry 4 }

igmpInterfaceQuerier OBJECT-TYPE
    SYNTAX     IpAddress
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The address of the IGMP Querier on the IP subnet to which
	    this interface is attached."
    ::= { igmpInterfaceEntry 5 }

igmpInterfaceQueryMaxResponseTime OBJECT-TYPE
    SYNTAX     INTEGER
--  UNITS      "seconds"
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The maximum query response time advertised in IGMPv2
	    queries on this interface.	Smaller values allow a router to
	    prune groups faster."
    DEFVAL     { 10 }							 
    ::= { igmpInterfaceEntry 6 }

igmpInterfaceQuerierPresentTimeout OBJECT-TYPE
    SYNTAX     INTEGER
--  UNITS      "seconds"
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "A timeout interval.  If no IGMPv2 queries are heard on this
	    interface within this timeout interval, the local router
	    will take over the Querier on the IP subnet to which this
	    interface is attached."
    DEFVAL     { 255 }
    ::= { igmpInterfaceEntry 7 }

igmpInterfaceLeaveEnabled OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "An indication of whether the processing of IGMPv2 Leave
	    messages is enabled on this interface."
--  DEFVAL    { true }
    ::= { igmpInterfaceEntry 8 }

igmpInterfaceVersion1QuerierTimer OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The time remaining until the host assumes that there are no
	    IGMPv1 routers present on the interface.  While this is
	    non-zero, the host will reply to all queries with version 1
	    membership reports."
    ::= { igmpInterfaceEntry 9 }

igmpInterfaceWrongVersionQueries OBJECT-TYPE
    SYNTAX     Counter
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The number of queries received whose IGMP version does not
	    match igmpInterfaceVersion.   IGMP requires that all routers
	    on a LAN be configured to run the same version of IGMP.
	    Thus, if any queries are received with the wrong version,
	    this indicates a configuration error."
    ::= { igmpInterfaceEntry 10 }

igmpInterfaceJoins OBJECT-TYPE
    SYNTAX     Counter
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The number of times a group membership has been added on
	    this interface; that is, the number of times an entry for
	    this interface has been added to the Cache Table.  This
	    object gives an indication of the amount of IGMP activity
	    over time."
    ::= { igmpInterfaceEntry 11 }

igmpInterfaceLeaves OBJECT-TYPE
    SYNTAX     Counter
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The number of times a group membership has been removed
	    from this interface; that is, the number of times an entry
	    for this interface has been deleted from the Cache Table.
	    The difference between this and igmpInterfaceJoins indicates
	    the current number of entries in the Cache Table."
    ::= { igmpInterfaceEntry 12 }

igmpInterfaceAdminStatus OBJECT-TYPE
    SYNTAX     INTEGER {
	       enabled	(1),
	       disabled (2)
	       }
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The enabling/disabling of IGMP on the interface."
    ::= { igmpInterfaceEntry 13 }

igmpInterfaceRobustnessVariable OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "This variable allows tining for the expected packet loss
	    on a subnet. If a subnet is expected to be lossy, this
	    variable may be increased."
    ::= { igmpInterfaceEntry 14 }

igmpInterfaceLastMemberQueryIntvl OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "This is the max response time inserted into Group-Specific
	    Queries sent in response to Leave Group messages, and is also
	    the amount of time between Group-Specific Query Messages.
	    Default = 10 (tenths of a second)."
    ::= { igmpInterfaceEntry 15 }


--
--  The IGMP Cache Table
--

igmpCacheTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF IgmpCacheEntry
    ACCESS     not-accessible
    STATUS     mandatory
    DESCRIPTION
	    "The (conceptual) table listing the IP multicast groups for
	    which there are members on a particular interface."
    ::= { cascigmp 2 }

igmpCacheEntry OBJECT-TYPE
    SYNTAX     IgmpCacheEntry
    ACCESS     not-accessible
    STATUS     mandatory
    DESCRIPTION
	    "An entry (conceptual row) in the igmpCacheTable."
    INDEX      { igmpCacheAddress, igmpCacheIfIndex }
    ::= { igmpCacheTable 1 }

IgmpCacheEntry ::= SEQUENCE {
    igmpCacheAddress		IpAddress,
    igmpCacheIfIndex		INTEGER,
    igmpCacheSelf		INTEGER,
    igmpCacheLastReporter	IpAddress,
    igmpCacheUpTime		TimeTicks,
    igmpCacheExpiryTime 	TimeTicks,
    igmpCacheStatus		INTEGER,
    igmpCacheVersion1HostTimer	INTEGER
}

igmpCacheAddress OBJECT-TYPE
    SYNTAX     IpAddress
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The IP multicast group address for which this entry
	    contains information."
    ::= { igmpCacheEntry 1 }

igmpCacheIfIndex OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The interface for which this entry contains information for
	    an IP multicast group address."
    ::= { igmpCacheEntry 2 }

igmpCacheSelf OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "An indication of whether the local system is a member of
	    this group address on this interface."
--  DEFVAL     { true }
    ::= { igmpCacheEntry 3 }

igmpCacheLastReporter OBJECT-TYPE
    SYNTAX     IpAddress
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The IP address of the source of the last membership report
	    received for this IP Multicast group address on this
	    interface.	If no membership report has been received, this
	    object has the value 0.0.0.0."
    ::= { igmpCacheEntry 4 }

igmpCacheUpTime OBJECT-TYPE
    SYNTAX     TimeTicks
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The time since the system joined this group address, or
	    zero if the system is not currently a member."
    ::= { igmpCacheEntry 5 }

igmpCacheExpiryTime OBJECT-TYPE
    SYNTAX     TimeTicks
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The minimum amount of time remaining before this entry will
	    be aged out."
    ::= { igmpCacheEntry 6 }

igmpCacheStatus OBJECT-TYPE
    SYNTAX     INTEGER
    ACCESS     read-write
    STATUS     mandatory
    DESCRIPTION
	    "The status of this entry."
    ::= { igmpCacheEntry 7 }

igmpCacheVersion1HostTimer OBJECT-TYPE
    SYNTAX     INTEGER
--  UNITS      "seconds"
    ACCESS     read-only
    STATUS     mandatory
    DESCRIPTION
	    "The time remaining until the local router will assume that
	    there are no longer any IGMP version 1 members on the IP
	    subnet attached to this interface.	Upon hearing any IGMPv1
	    Membership Report, this value is reset to the group
	    membership timer.  While this time remaining is non-zero,
	    the local router ignores any IGMPv2 Leave messages for this
	    group that it receives on this interface."
    ::= { igmpCacheEntry 8 }


--
--  QSM MIB - The following table reflects the Integrated Services MIB 
--  as define in "draft-ietf-intserv-mib-06.txt".
--   It has been modified as follows:
--	      - 6 new fields added to the interface table to include
--		    qsmFlowTOS
--		    qsmFlowTdCategory
--		    qsmFlowParam1
--		    qsmFlowParam2
--		    qsmFlowParam3
--		    qsmFlowProfileId
--            - For clarity changed qsmFlowStatus to qsmFlowState
--            - SYNTAX type "rowstatus"   changed to "INTEGER"
--	      - SYNTAX type "Integer32"   changed to "INTEGER"
--	      - SYNTAX type "TruthValue"  changed to "INTEGER"
--	      - SYNTAX type "Counter32"   changed to "Counter"
--            - SYNTAX type "QosService"  changed to "INTEGER"
--  The QoS Shortcut Manager Active Flows Database lists all flows active on an
--  outgoing interface, including relevant attributes.

qsmFlowTable OBJECT-TYPE
	SYNTAX      SEQUENCE OF QsmFlowEntry
	ACCESS  not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Information describing the active flows using
		 the node's interfaces."
	::= { cascqsm 1 } 

qsmFlowEntry OBJECT-TYPE
	SYNTAX      QsmFlowEntry
	ACCESS  not-accessible
	STATUS      mandatory
	DESCRIPTION
		"Information describing the use of a given interface
		 by a given flow."
	INDEX { qsmFlowLport, qsmFlowNumber }
	::= { qsmFlowTable 1 }

QsmFlowEntry ::=
	SEQUENCE {
		qsmFlowNumber			INTEGER,
		qsmFlowType			INTEGER,
		qsmFlowOwner			INTEGER,
		qsmFlowDestAddr		        OCTET STRING,
		qsmFlowSenderAddr		OCTET STRING,
		qsmFlowDestAddrLength		INTEGER,
		qsmFlowSenderAddrLength	        INTEGER,
		qsmFlowProtocol		        INTEGER,
		qsmFlowDestPort		        INTEGER,
		qsmFlowPort			INTEGER,
		qsmFlowInterface		INTEGER,
                qsmFlowIfAddr                   OCTET STRING,
		qsmFlowRate			INTEGER,
		qsmFlowBurst			INTEGER,
		qsmFlowWeight			INTEGER,
		qsmFlowQueue			INTEGER,
		qsmFlowMinTU			INTEGER,
                qsmFlowMaxTU                    INTEGER,
                qsmFlowDontAsk                  INTEGER,
                qsmFlowPoliced                  Counter,
                qsmFlowDiscard                  INTEGER,
                qsmFlowService                  INTEGER,
                qsmFlowOrder                    INTEGER,
		qsmFlowState			INTEGER,
		qsmFlowLport			INTEGER,
		qsmFlowTOS			INTEGER,
                qsmFlowQosType		        INTEGER,
		qsmFlowTdCategory		INTEGER,
		qsmFlowParam1			INTEGER,
		qsmFlowParam2			INTEGER,
		qsmFlowParam3			INTEGER
        }

qsmFlowNumber OBJECT-TYPE	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of this flow.  This is for SNMP indexing
		 purposes only and has no relation to any protocol
		 value."
	::= { qsmFlowEntry 1 }

qsmFlowType OBJECT-TYPE
	SYNTAX      INTEGER{
			ip4 (1),
			others (2)
                    }
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The type of session (IP4, IP6, IP6 with flow
		information, etc)." 
	::= { qsmFlowEntry 2 }

qsmFlowOwner OBJECT-TYPE
	SYNTAX      INTEGER {
			rsvp(1),
			management(2),
			nhrp (3),
		        other(4)
		    }
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The process that installed this flow in the queue
		 policy database."
	::= { qsmFlowEntry 3 }

qsmFlowDestAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE(4..16))
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The destination address used by all senders in this
		 session."
	::= { qsmFlowEntry 4 }

qsmFlowSenderAddr OBJECT-TYPE
	SYNTAX      OCTET STRING (SIZE(4..16))
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The source address of the sender selected by
		 this reservation. The value of all zeroes indicates
		 'all senders'."
	::= { qsmFlowEntry 5 }

qsmFlowDestAddrLength OBJECT-TYPE
	SYNTAX      INTEGER(0..128)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The length of the destination address in bits.
		 This  is  the CIDR Prefix Length, which for IPv4
		 hosts and Multicast addresses is 32 bits."
	::= { qsmFlowEntry 6 }

qsmFlowSenderAddrLength OBJECT-TYPE
	SYNTAX      INTEGER(0..128)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The length of the sender's  address  in  bits.
		 This  is  the CIDR Prefix Length, which for IPv4
		 hosts and Multicast addresses is 32 bits."
	::= { qsmFlowEntry 7 }

qsmFlowProtocol OBJECT-TYPE
	SYNTAX      INTEGER(0..255)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The IP Protocol used by a session."
	::= { qsmFlowEntry 8 }

qsmFlowDestPort OBJECT-TYPE
	SYNTAX      INTEGER(0..65535)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The UDP or TCP port number used as a  destination
		 port for all senders in this session. If the IP
		 protocol in use, specified by qsmFlowProtocol,
		 is 50 (ESP) or 51 (AH), this represents a virtual
		 destination port number. A value of zero indicates
		 that the IP protocol in use does not have ports."
	::= { qsmFlowEntry 9 }

qsmFlowPort OBJECT-TYPE
	SYNTAX      INTEGER(0..65535)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The UDP or TCP port number used as a source port
		 for  this sender in this session.  If the IP 
		 protocol in use, specified by qsmFlowProtocol
		 is  50 (ESP) or 51 (AH), this represents a
		 generalized  port  identifier (GPI). A  value of
		 zero indicates that the IP protocol in use does
		 not have ports."
	::= { qsmFlowEntry 10 }

qsmFlowInterface OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The ifIndex value of the interface on which this
		 reservation exists."
	::= { qsmFlowEntry 11 }

qsmFlowIfAddr OBJECT-TYPE
	SYNTAX      OCTET STRING
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The IP Address on the ifEntry on which this
                 reservation exists.   This is present primarily
                 to support those interfaces which layer multiple
                 IP Addresses on the interface."
	::= { qsmFlowEntry 12 }

qsmFlowRate OBJECT-TYPE
	SYNTAX      INTEGER
--	UNITS       "bits per second"
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The Reserved Rate of the sender's data stream.
		 If this is a Controlled Load service flow, this
		 rate is derived from the Tspec rate parameter (r).
		 If  this  is  a Guaranteed service flow, this rate
		 is derived from the Rspec clearing rate parameter (R)."
	::= { qsmFlowEntry 13 }

qsmFlowBurst OBJECT-TYPE
	SYNTAX      INTEGER
--	UNITS       "bytes"
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The size of the largest burst expected  from
		 the sender at a time.
		 If this is less than the sender's  advertised
		 burst size, the receiver is asking the network
		 to provide flow pacing beyond what would be
		 provided  under normal circumstances. Such pacing
		 is at the network's option."
	::= { qsmFlowEntry 14 }

qsmFlowWeight OBJECT-TYPE	
	SYNTAX      INTEGER(1..4)
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The weight used to prioritize the traffic.
		 If qsmFlowQueue is `vbrRt' or `vbrNrt' this
		 denotes VBR traffic priority. Otherwise this
		 returns 1."
	::= { qsmFlowEntry 15 }

qsmFlowQueue OBJECT-TYPE	
	SYNTAX      INTEGER {
			cbr (1),
			vbrRt (2),
			vbrNrt (3),
			ubr (4),
			abr (5)
		     }
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of the queue used by this traffic.
		 Note that the interpretation of this object is
		 implementation-specific, as implementations
		 vary in their use of queue identifiers."
	::= { qsmFlowEntry 16 }

qsmFlowMinTU OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The minimum message size for this flow.
		 The policing  algorithm will treat smaller messages
		 as though they are this size."
	::= { qsmFlowEntry 17 }

qsmFlowMaxTU OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The maximum datagram size for this flow that
                 will conform to the traffic specification.
                 This value cannot exceed the MTU of the interface."
	::= { qsmFlowEntry 18 }

qsmFlowDontAsk OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"A period of time, measured in hundredths of a
                 second, during which the agent is precluded 
                 from sending a newFlow notification for this
                 conversation.  If an authorizing application 
                 leaves qsmFlowStatus in a state other than neither
                 consider the flow active for admission or queuing
                 purposes, or re-request authorization to install it,
                 until the indicated amount of time has elapsed"
	::= { qsmFlowEntry 19 }

qsmFlowPoliced OBJECT-TYPE
	SYNTAX      Counter
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The number of packets policed since the inception
                 of the flow's service."
	::= { qsmFlowEntry 20 }

qsmFlowDiscard OBJECT-TYPE
	SYNTAX      INTEGER {
			true  (1),
			false (2)
			}
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"If 'true', the flow is to incur loss when 
                 traffic is policed.  If 'false', policed traffic
                 is treated as best effort traffic."
        DEFVAL {false} -- traffic is, by default, treated as best effort
	::= { qsmFlowEntry 21 }

qsmFlowService OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The Qos service being applied to this flow."
	::= { qsmFlowEntry 22 }

qsmFlowOrder OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"In the event of ambiguity, the order in which
                 the classifier should make its comparisons.
                 The row with qsmFlowOrder=0 is tried first
                 and comparisons proceed in the order of
                 increasing value.  Non-serial implementations
                 of the classifier should emulate this behavior"
	::= { qsmFlowEntry 23 }

qsmFlowState OBJECT-TYPE
	SYNTAX      INTEGER{
			awaitOnset(1),
			flowDetected (2),
                        shortcutRequest (3),
                        awaitAbatement (4),
                        resumeOnset (5),
                        resumeFD (6),
                        resumeCR (7),
                        resumeTimerExp (8),
                        resumeShortcutConf (9),
                        resumeAbatement (10),
                        resumeAbateDetect (11),
                        resumeShortcutRel (12),
                        resumeOnsetDetect (13),
                        resumeCreateReq (14)
                    }
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		" This field represents the current flow state of 
                  this flow "
	::= { qsmFlowEntry 24 }

qsmFlowLport OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The lport used for this flow"
	::= { qsmFlowEntry 25 }

qsmFlowTOS OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		" The type of service associated with this flow"
	::= { qsmFlowEntry 26 }

qsmFlowQosType OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The type of QOS being used for this flow "
	::= { qsmFlowEntry 27 }

qsmFlowTdCategory OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"The traffic descriptor type being used for this flow "
	::= { qsmFlowEntry 28 }

qsmFlowParam1 OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		" First traffic descriptor parameter "
	::= { qsmFlowEntry 29 }

qsmFlowParam2 OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		"Second traffic descriptor parameter "
	::= { qsmFlowEntry 30 }

qsmFlowParam3 OBJECT-TYPE
	SYNTAX      INTEGER
	ACCESS  read-only
	STATUS      mandatory
	DESCRIPTION
		" Third traffic descriptor parameter "
	::= { qsmFlowEntry 31 }


END
