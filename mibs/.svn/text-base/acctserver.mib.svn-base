CASCADE-ACCTSERVER-MIB DEFINITIONS ::= BEGIN

 
-- ***************************************************************************
-- * Cascade Communications Accounting Server MIB Definitions
-- *
-- Date 	Engineer	Description
-- 31Dec96	David Chan	Created
-- ***************************************************************************

IMPORTS
        IpAddress
                FROM RFC1155-SMI
        DisplayString
                FROM RFC1213-MIB
        OBJECT-TYPE
                FROM RFC-1212
        TRAP-TYPE
                FROM RFC-1215
        acctserver
                FROM CASCADE-MIB;
 
--  This MIB module uses the extended OBJECT-TYPE macro as defined in RFC 1212

center          OBJECT IDENTIFIER ::= { acctserver 1 }
appl            OBJECT IDENTIFIER ::= { acctserver 2 }

Index ::= INTEGER       --  1..ifNumber

nextDestIndex  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The next available index using as an instance oid to
                 create a new row for the trap destination table."
        ::= { center 1 }


nextDiskIndex  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The next available index using as an instance oid
                 to create a new row for the disk table. "
        ::= { center 2 }


trapDestTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF TrapDestEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Trap destination table. This table is using to send
		 traps to SNMP manager workstations."
        ::= { center 3 }



trapDestEntry  OBJECT-TYPE
        SYNTAX  TrapDestEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Trap destination entry."
        INDEX   { trapDestIndex }
        ::= { trapDestTable 1 }



TrapDestEntry  ::=
	SEQUENCE {
                trapDestIndex
                        Index,
                trapIpAddr
                        IpAddress,
		trapPort
			INTEGER,
		trapStatus
			INTEGER
        }


trapDestIndex OBJECT-TYPE
        SYNTAX  Index
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The value of this object uniquely identifies a
                 trap destination entry."
        ::= { trapDestEntry  1 }



trapIpAddr OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The IP address for a host which traps will send to."
        ::= { trapDestEntry  2 }


trapPort OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The port number for a host which traps will send to."
        ::= { trapDestEntry  3 }


trapStatus OBJECT-TYPE
        SYNTAX  INTEGER {
		active(1),
		notInServ(2),
		createGo(3),
		createWait(4),
		destroy(5),
		other(6)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"A status entry for the trap destination table. Once a
                 row for the trap destination table is created, then this
                 object CANNOT be changed."
        ::= { trapDestEntry  4 }


-- The Accounting Server's SNMP agent monitor the state of all disks that
-- store billing data in order to detect conditions in which disk space
-- is running low.
--
-- Threshold monitoring is configured via the pollTable; one
-- instance of this table exists for each disk being monitored.  The rows
-- of the table define threshold levels to be monitored.
--

pollTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF PollEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Poll configuration table."
        ::= { center 4 }


pollEntry OBJECT-TYPE
        SYNTAX  PollEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Poll configuration table entry."
        INDEX   { pollIndex }
        ::= { pollTable 1 }



PollEntry  ::=
	SEQUENCE {
		pollIndex
			Index,
		polledObjectOid
			OCTET STRING,
		thresholdSeverity
			INTEGER,
		thresholdValue
			INTEGER,
		thresholdType
			INTEGER,
		pollInterval
			INTEGER,
		pollStatus
			INTEGER,
		pollValue
			INTEGER,
		polledObjectName
			DisplayString
	}


pollIndex OBJECT-TYPE
        SYNTAX  Index
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "An unique index for each entry in the poll
		 configuration table."
        ::= { pollEntry 1 }


polledObjectOid OBJECT-TYPE
        SYNTAX  OCTET STRING
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
                "The Object identifier of a particular variable in the
                 MIB to be polled. The only object types allowed to be
		 polled are INTEGER, counter, gauge and TimeTicks."
        ::= { pollEntry 2 }


thresholdSeverity OBJECT-TYPE
        SYNTAX  INTEGER {
		critical (1),
                major (2),
                minor (3),
                normal (4)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Severity code for an entry on the poll configuration
		 table.  When the polled variable is reaches a
		 predefined threshold level, the state of the entity which
                 contains the polled variable will be defined by this
		 severity."
	::= { pollEntry 3 }


thresholdValue OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"A polling threshold for the sampled statistic. "
	::= { pollEntry 4 }


thresholdType OBJECT-TYPE
        SYNTAX  INTEGER {
		  equal (1),
		  less (2),
		  greater (3),
	          notEqual (4)
                } 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The method of calculating the value to be compared to
		 the threshold."
	::= { pollEntry 5 }


pollInterval OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The interval in seconds over which the data is sampled
		 and compared to the threshold."
	::= { pollEntry 6 }


pollStatus OBJECT-TYPE
        SYNTAX  INTEGER {
		active(1),
		notInServ(2),
		createGo(3),
		createWait(4),
		destroy(5),
		other(6)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"A status entry for the poll table. Once a row for this
                 table is created, then this object CANNOT be changed."
	::= { pollEntry 7 }



pollValue OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"Sampled value of the object being pollled."
	::= { pollEntry 8 }


polledObjectName OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The name of the sampled object or the name of the
		 entity which contains the sampled object."
	::= { pollEntry 9 }


--
-- Disk Table
--
-- This table contains the filesystems whose state is to be monitored.
-- The state to be monitored includes disk capacity and use.
--
--

diskTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF DiskEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Disk information table."
        ::= { center 5 }


diskEntry OBJECT-TYPE
        SYNTAX  DiskEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A set of variables for a particular disk."
	INDEX   { diskDirectory }
        ::= { diskTable 1 }


DiskEntry ::=
	SEQUENCE {
		diskDirectory
			DisplayString,
		diskSpace
			INTEGER,
		diskUsed
			INTEGER,
		diskStatus
			INTEGER,
                diskSeverity
                        INTEGER,
		diskPercentageUsed
			INTEGER
	}




diskDirectory  OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The directory name corresponding to the filesystem that
	         is to be monitored."
	::= { diskEntry 1 }

diskSpace OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The capacity (in kbytes) of the filesystem."
	::= { diskEntry 2 }


diskUsed OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The space used (in kbytes) on the filesystem."
	::= { diskEntry 3 }


diskStatus  OBJECT-TYPE
        SYNTAX  INTEGER  {
		active(1),
		notInServ(2),
		createGo(3),
		createWait(4),
		destroy(5),
		other(6)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"A status entry for a row on the disk table.  Only the
		 the value of createGo and destroy can be allowed to set."
	::= { diskEntry 4 }

diskSeverity  OBJECT-TYPE
        SYNTAX  INTEGER {
		   critical (1),
                   major (2),
                   minor (3),
                   normal (4)
                }
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The current disk capacity threshold state of the disk."
	::= { diskEntry 5 }

diskPercentageUsed OBJECT-TYPE
        SYNTAX  INTEGER (0..100)
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The percentage of space used on this filesystem."
	::= { diskEntry 6 }



nextSwitchIndex OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
                "The next available index using as an instance oid.
                 This object is used to create a row for the switch
	         table. "
        ::= { appl 1 }


billParmTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF BillParmEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Billing parameters table."
        ::= { appl 2 }


billParmEntry OBJECT-TYPE
        SYNTAX  BillParmEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "An entry contains billing parameters for each 
                 accounting system."
	INDEX   { sourceCompIdNumber }
        ::= { billParmTable 1 }


BillParmEntry  ::=
	SEQUENCE {
                sourceCompIdNumber
                        INTEGER,
                sourceCompTypeCode
                        INTEGER,
		maxAMAFileSize
			INTEGER,
		maxRecInFile
			INTEGER,
		aMAFourFieldSup
			INTEGER,
		optModules
			INTEGER,
		secFileAgeLimit
			INTEGER,
		usageFileAgeLimit
			INTEGER,
		callDataAgeLimit
			INTEGER,
		iPTPTermSvcCallType
			INTEGER,
		iPTPOrigSvcCallType
			INTEGER,
		iPTMTermLeafSvcCallType
			INTEGER,
		iPTMOrigSvcCallType
			INTEGER,
		intraPvcCallType
			INTEGER,
		interPvcCallType
			INTEGER,
		interSvcOrigUniCallType
			INTEGER,
		interSvcOrigNniCallType
			INTEGER,
		interSvcTermUniCallType
			INTEGER,
		interSvcTermNniCallType
			INTEGER
	}

sourceCompIdNumber OBJECT-TYPE
        SYNTAX  INTEGER (0..9999)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore-defined Source Component Identification Number
		for the Accounting Server.
		
		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { billParmEntry 1 }


sourceCompTypeCode OBJECT-TYPE
        SYNTAX  INTEGER (0..99)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore-defined Source Component Type Code for the
		Accounting Server.
		
		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { billParmEntry 2 }

maxAMAFileSize  OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The maximum size of (in kbytes) of AMA files containing
		accounting records that this server will create."
	::= { billParmEntry 3 }

 
maxRecInFile OBJECT-TYPE
        SYNTAX  INTEGER 
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The maximum number of AMA records allowed in a file."
	::= { billParmEntry 4 }


aMAFourFieldSup OBJECT-TYPE
        SYNTAX  INTEGER {
		disabled(0),
                enabled(1)
		}
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Determines whether AMA four-field suppression is
		enabled or disabled.

		When set to enabled (1), the Sensor Type, Sensor
		Identification, Recording Office Type and Recording
		Office Identifier will not be placed into Bellcore
		AMA records.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { billParmEntry 5 }


optModules OBJECT-TYPE
        SYNTAX  INTEGER {
		disabled(0),
                enabled(1)
		}
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"When set to enabled(1), Cascade proprietary modules for
		Billing Call Correlation Identifier and Switch Interface 
		Identifiers will be included in each Bellcore AMA record.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { billParmEntry 6 }


secFileAgeLimit OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Accounting file purging parameters : secondary
		 file age limit.
		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { billParmEntry 7 }


usageFileAgeLimit  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Accounting file purging parameters : usage data file age limit."
	::= { billParmEntry 8 }


callDataAgeLimit  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Accounting file purging parameters : call data age limit."
	::= { billParmEntry 9 }


iPTPTermSvcCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Intranetwork point to point terminating SVC Call Type
		for Bellcore AMA BAF Structure 0214."
	::= { billParmEntry 10 }



iPTPOrigSvcCallType   OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Intranetwork point to point origination SVC Call Type
		for Bellcore AMA BAF Structure 0214."
	::= { billParmEntry 11 }


iPTMTermLeafSvcCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Intranetwork point to multipoint terminating leaf 
		SVC Call Type for Bellcore AMA BAF Structure 0214."
	::= { billParmEntry 12 }


iPTMOrigSvcCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Intranetwork point to multipoint originating root
	         SVC Call Type for Bellcore AMA BAF Structure 0214."
	::= { billParmEntry 13 }


intraPvcCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Intranetwork PVC Call Type for Bellcore AMA BAF
		Structure 0216."
	::= { billParmEntry 14 }


interPvcCallType   OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Internetwork PVC Call Type for Bellcore AMA BAF 
		Structure 0216."
	::= { billParmEntry 15 }


interSvcOrigUniCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Internetwork SVC originating UNI Call Type for Bellcore
		AMA BAF Structure 0214."
	::= { billParmEntry 16 }

interSvcOrigNniCallType OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Internetwork SVC originating NNI Call Type for Bellcore
		AMA BAF Structure 0214."
	::= { billParmEntry 17 }

interSvcTermUniCallType  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Internetwork SVC terminating UNI Call Type for Bellcore
		AMA BAF Structure 0214."
	::= { billParmEntry 18 }

interSvcTermNniCallType OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"Internetwork SVC terminating NNI Call Type for Bellcore
		AMA BAF Structure 0214."
	::= { billParmEntry 19 }


--
-- Accounting File Transfer 
--
-- The FTP table defines the parameters of the systems to which 
-- accounting files are transferred.
--

ftpConfTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF FtpConfEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "Ftp configuration table which is used to managed
		 access to a remote host to which accounting data is sent."
        ::= { appl 3 }


ftpConfEntry OBJECT-TYPE
        SYNTAX  FtpConfEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A ftp entry contains information for the remote host."
	INDEX  { ftpDestDir }
        ::= { ftpConfTable 1 }


FtpConfEntry ::=
	SEQUENCE {
		ftpDestDir
			DisplayString,
		ftpDestPort
			INTEGER,
		ftpLogin
			DisplayString,
		ftpPassword
			DisplayString
	}


ftpDestDir OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The destination directory where the Accounting files are
                 stored on the remote host."
	::= { ftpConfEntry 1 }



ftpDestPort OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The destination port where the Accounting files are sent
		 on the remote host."
	::= { ftpConfEntry 2 }


ftpLogin OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The FTP login name."
	::= { ftpConfEntry 3 }


ftpPassword OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The FTP login password."
	::= { ftpConfEntry 4 }


--
-- Billing Operations Server Configuration
--
-- The following table defines parameters used to manage the interface
-- to one or more Billing Operations Servers.
--

bosConfTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF BosConfEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A list of Billing Operations Server (BOS) entries."
        ::= { appl 4 }


bosConfEntry OBJECT-TYPE
        SYNTAX  BosConfEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A BOS entry contains the status of a BOS server."
	INDEX  { primBosIPAddr }
        ::= { bosConfTable 1 }


BosConfEntry  ::=
	SEQUENCE {
		fileTransOpt
			INTEGER,
		primBosIPAddr
			IpAddress,
		fileSeqNumRestCnt
			INTEGER,
		primFileTransCnt
			INTEGER,
		fileTransLoginFailCnt
			INTEGER,
		fileTransFailureCnt
			INTEGER,
		destCompIdNumber
			INTEGER,
		destCompTypeCode
			INTEGER
	}


fileTransOpt OBJECT-TYPE
        SYNTAX  INTEGER {
		disabled(0),
		enabled(1)
		}
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"If enabled (1), the Accounting server will transfer
		AMA files to this BOS."
	::= { bosConfEntry 1 }



primBosIPAddr OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The IP address of the BOS."
	::= { bosConfEntry 2 }


fileSeqNumRestCnt  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The file transfer restart count."
	::= { bosConfEntry 3 }


primFileTransCnt  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The primary file transfer count."
	::= { bosConfEntry 4 }


fileTransLoginFailCnt OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The file transfer login failure count."
	::= { bosConfEntry 5 }



fileTransFailureCnt  OBJECT-TYPE
        SYNTAX  INTEGER
        ACCESS  read-only
        STATUS  mandatory
        DESCRIPTION
		"The file transfer failure count."
	::= { bosConfEntry 6 }


destCompIdNumber OBJECT-TYPE
        SYNTAX  INTEGER (0..9999)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore Destination Component ID of the BOS.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { bosConfEntry 7 }

destCompTypeCode   OBJECT-TYPE
        SYNTAX  INTEGER (0..99)
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore Destination Component Type of the BOS.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { bosConfEntry 8 }


--
-- The Switch Table contains information on each switch that is configured
-- to send accounting usage data to this Accounting Server.
--
-- For systems in which Bellcore AMA records are created, each switch
-- must be assigned a Sensor Id and Sensor Type.
--


switchTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF SwitchEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A list of switch table entries."
        ::= { appl 5 }


switchEntry OBJECT-TYPE
        SYNTAX  SwitchEntry
        ACCESS  not-accessible
        STATUS  mandatory
        DESCRIPTION
                "A entry contains information on a managed switch."
	INDEX { switchId }
        ::= { switchTable 1 }



SwitchEntry ::=
	SEQUENCE {
		switchName
			DisplayString,
		switchId
			IpAddress,
		sensorId
			DisplayString,
		sensorType
			DisplayString,
		switchStatus
			INTEGER
        }


switchName OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The switch name."
	::= { switchEntry 1 }



switchId OBJECT-TYPE
        SYNTAX  IpAddress
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The switch IP address which is also the IP address
		 of the switch."
	::= { switchEntry 2
}


sensorId  OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore Sensor ID that has been assigned to this switch.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { switchEntry 3 }


sensorType OBJECT-TYPE
        SYNTAX  DisplayString
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"The Bellcore Sensor Type that has been assigned to 
		the switch.

		This object is valid only when the Accounting Server is
		configured to generate Bellcore AMA records."
	::= { switchEntry 4 }


switchStatus  OBJECT-TYPE
        SYNTAX  INTEGER {
		active(1),
		notInServ(2),
		createGo(3),
		createWait(4),
		destroy(5),
		other(6)
                }
        ACCESS  read-write
        STATUS  mandatory
        DESCRIPTION
		"A status entry for a row on the switch table. The attribute
    		 flag for this entry also contains a F_CREATE flag which
		 means once a row for this table is created, then this
	         object CANNOT be changed."
	::= { switchEntry 5 }


--
-- Trap Definitions
--

acctServerStartup TRAP-TYPE
        ENTERPRISE acctserver
        DESCRIPTION
                "This trap indicates that the Accounting Server is
                now operational."
        ::= 1

acctServerShutdown TRAP-TYPE
        ENTERPRISE acctserver
        DESCRIPTION
                "This trap indicates that the Accounting Server operations
                have been shut-down."
        ::= 2

diskSpaceThresholdExceeded TRAP-TYPE
        ENTERPRISE acctserver
        VARIABLES  { diskDirectory, diskPercentageUsed, 
                        thresholdValue, thresholdSeverity }
        DESCRIPTION
                "This trap indicates the disk space threshold of the
                indicated filesystem has been surpassed."
        ::= 3

diskStatusChanged TRAP-TYPE
        ENTERPRISE acctserver
	VARIABLES { diskDirectory, diskSeverity, diskPercentageUsed }
        DESCRIPTION
                "This trap is sent when the disk space percentage used on
		 a disk is no longer over the threshold value. The
		 severity level reported in the trap corresponds to the
		 threshold level that was exited."
        ::= 4

switchNotInConfiguration TRAP-TYPE
        ENTERPRISE acctserver
        DESCRIPTION
                "This trap is sent when the Accounting Server receives
                data from a switch for which it is not configured to
                process."
        ::= 5

amaFileTransferFailure TRAP-TYPE
        ENTERPRISE acctserver
        DESCRIPTION
                "This trap is sent when the Accounting Server has failed
                to transfer one or more accounting files to the Billing 
                Operations Server (BOS), i.e., the upstream system to which 
                formatted accounting data (e.g., Bellcore BAF records) 
                is transfered."
        ::= 6
haFailure TRAP-TYPE             
        ENTERPRISE acctserver
        DESCRIPTION
        "This trap is sent out when the accounting server switches
         to the reserve server"
        ::= 7

END
